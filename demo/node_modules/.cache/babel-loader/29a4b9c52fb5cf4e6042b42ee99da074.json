{"remainingRequest":"/Users/dishakc/Documents/Data_Visualization/project_DV/project-the-vizards/demo/node_modules/babel-loader/lib/index.js!/Users/dishakc/Documents/Data_Visualization/project_DV/project-the-vizards/demo/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/dishakc/Documents/Data_Visualization/project_DV/project-the-vizards/demo/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/dishakc/Documents/Data_Visualization/project_DV/project-the-vizards/demo/src/views/CombinedChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/dishakc/Documents/Data_Visualization/project_DV/project-the-vizards/demo/src/views/CombinedChart.vue","mtime":1606698004468},{"path":"/Users/dishakc/Documents/Data_Visualization/project_DV/project-the-vizards/demo/node_modules/cache-loader/dist/cjs.js","mtime":1605858454017},{"path":"/Users/dishakc/Documents/Data_Visualization/project_DV/project-the-vizards/demo/node_modules/babel-loader/lib/index.js","mtime":1605858453462},{"path":"/Users/dishakc/Documents/Data_Visualization/project_DV/project-the-vizards/demo/node_modules/cache-loader/dist/cjs.js","mtime":1605858454017},{"path":"/Users/dishakc/Documents/Data_Visualization/project_DV/project-the-vizards/demo/node_modules/vue-loader/lib/index.js","mtime":1605858459895}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["CombinedChart.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"CombinedChart\">\n    <link href=\"css/bootstrap/bootstrap.min.css\" rel=\"stylesheet\" />\n    <div id=\"area\" class=\"jumbotron\">\n      <h4>Correlation between Safety Score Vs Rent price in Los Angeles</h4>\n      <br />\n      <p>\n        To understand the relationship between the rent and crime more\n        cohesively, we decided to introduce a new attribute, called, “Safety\n        Score”. This was calculated to consider that different crime types have\n        different severity levels and hence, should be given higher weightage\n        even if their frequency is low. Therefore, we calculated the crime score\n        first by aligning each crime type to it’s severity. After calculating\n        the crime score, the safety score were calculated using the crime score.\n      </p>\n\n      <h5>Safety Score Calculation</h5>\n      <p>\n        The crime dataset consists of a list of crimes with varying severity.\n        Intuitively, it can be understood that the more serious the crime the\n        higher it impacts the perception of security in a location. Based on\n        <a href=\"https://doi.org/10.1093/police/pax049\" target=\"_blank\"\n          >Comparing Methods for Measuring Crime Harm/Severity</a\n        >, weights are assigned to every crime and an overall value is\n        calculated for each location. Each crime in the crime dataset was\n        compared with the list of Notifiable Offence List Categories and given\n        the Crime Severity Score. The Crime Severity Score (CSS) is the score\n        assigned to a crime based on the mean sentence passed on those who were\n        convicted of the offense. Each score is normalized and the final crime\n        values for each location is calculated using the dot product of the\n        crime weight and the crime frequency matrices. Using these crime scores,\n        the safety scores are calculated by taking their negatives.\n      </p>\n\n      <h5>Final chart</h5>\n      <p>\n        In this chart, we can click on any neighborhood and check the\n        relationship between safety score and rent price. In general, we can\n        observe that as the safety score increases, the rent price increases.\n        The colors on Los Angeles map indicate the safety score for each\n        neighborhood. If we hover over a neighborhood, it shows us the average\n        rent over the years in that neighborhood. Through the interactive\n        feature, which allows us to select a specific neighborhood, we can dive\n        deeper into the trends of both safety score and average rent over the\n        years for that specific neighborhood.\n      </p>\n      <div class=\"container\">\n        <div class=\"row\">\n          <div class=\"col-md-6\">\n            <div id=\"select-year\" style=\"text-align: center\"></div>\n            <div id=\"map-left\">\n              <!-- <svg id = \"svg_chart\"></svg> -->\n            </div>\n          </div>\n          <div id=\"map-right\" class=\"col-md-6\">\n            <h4 style=\"text-align: center\">\n              Safety Score Vs Rent price in LA by year\n            </h4>\n            <h6>* Line Chart Represents Rent Price</h6>\n            <h6>* Bar Chart Represents Safety Score</h6>\n            <div class=\"row\" id=\"map-line2\"></div>\n            <div class=\"row\" id=\"map-line\"></div>\n            <div id=\"area_name\"></div>\n            <!-- <svg class=\"row\" id=\"bar_chart\" width=\"100%\" height=\"500px\"></svg> -->\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport * as d3 from \"d3\";\n\nexport default {\n  name: \"CombinedChart\",\n  data: function () {\n    return {\n      chartData: null,\n    };\n  },\n  methods: {\n    CombinedChart() {\n      var width = 500;\n      var height = 600;\n      var projection = d3\n        .geoMercator()\n        .scale(15000)\n        // .scale(40000)\n        // Center the Map in LA\n        .center([-118.245, 34.05])\n        .translate([width / 2, height / 2]);\n      // var projection = d3.geoAlbersUsa()\n      //     .translate([width / 2, height / 2])\n      //     .scale([5000]);\n\n      // var tooltip = d3.select(\"body\").append(\"div\").attr(\"class\", \"toolTip\");\n      var tooltip = d3\n        .select(\"#map-left\")\n        .append(\"div\")\n        .attr(\"class\", \"toolTip\");\n      var tooltip_bar = d3\n        .select(\"#map-right\")\n        .append(\"div\")\n        .attr(\"class\", \"toolTip\");\n      // var tooltip_bar = d3.select(\"body\").append(\"div\").attr(\"class\", \"toolTip\");\n\n      var path = d3.geoPath().projection(projection);\n      var svg1 = d3\n        .select(\"body\")\n        .select(\"div#map-left\")\n        .append(\"svg\")\n        // .attr(\"viewBox\", \"0 0 500 600\");\n        .attr(\"width\", width)\n        .attr(\"height\", height);\n      var color;\n      // multiple async tasks\n\n      var files = [\n        \"la-county.geojson\",\n        \"area_data.json\",\n        \"overall_data.json\",\n        \"bar_data.json\",\n        \"bar_overall.json\",\n      ];\n      var promises = [];\n\n      files.forEach(function (url) {\n        promises.push(d3.json(url));\n      });\n      Promise.all(promises).then(function (values) {\n        var geojson = values[0];\n        var areadata = values[1];\n        var overall = values[2];\n        var bar_data = values[3];\n        var bar_overall = values[4];\n        overall_data = overall;\n        bar_overall_data = bar_overall;\n        area_data = d3.group(areadata, function (d) {\n          return d[\"Area Name\"];\n        });\n        area_data = Object.fromEntries(area_data);\n        // .object(areadata);\n        // d3\n        // .nest()\n        // .key(function (d) {\n        //   return d[\"Area Name\"];\n        // })\n        // .object(areadata);\n        bar_area_data = bar_data;\n        var json_features = dataPrep(geojson, areadata);\n        // console.log(json_features);\n        // var json_features1 = dataPrep1(geojson, bar_data);\n        // col = [\"#67001f\",\"#b2182b\",\"#d6604d\",\"#f4a582\",\"#fddbc7\",\"#f7f7f7\",\"#d1e5f0\",\"#92c5de\",\"#4393c3\",\"#2166ac\",\"#053061\"]\n        var col = [\n          \"#ffffcc\",\n          \"#ffeda0\",\n          \"#fed976\",\n          \"#feb24c\",\n          \"#fd8d3c\",\n          \"#fc4e2a\",\n          \"#e31a1c\",\n          \"#bd0026\",\n          \"#800026\",\n        ];\n        color = d3.scaleQuantize().range(col);\n        // .range(d3.schemeReds[9]);\n        svg1\n          .selectAll(\"path\")\n          .data(json_features)\n          .enter()\n          .append(\"path\")\n          .attr(\"class\", \"map\")\n          .attr(\"d\", path)\n          .on(\"click\", function (e, d) {\n            dispatch.call(\"areachange\", this, d);\n            // dispatch.call(\"areachange\", this, d);\n            d3.select(this).classed(\"selected\", true);\n          });\n        // right part\n        // line chart\n        // initLine();\n        // Adding legend\n        var l_color = d3.scaleQuantize([0, 2332], col);\n        var legendRectSize = 18;\n        var legendSpacing = 4;\n        var keys = [\n          \"$0 - $291.5\",\n          \"$291.6 - $583\",\n          \"$584 - $874.5\",\n          \"$874.6 - $1166\",\n          \"$1167 - $1457.5\",\n          \"$1457.6 - $1749\",\n          \"$1750 - $2040.5\",\n          \"$2040.6 - $2332\",\n        ];\n        // var keys = [\"1% - 10%\", \"11% - 20%\", \"21% - 30%\", \"31% - 40%\", \"41% - 50%\", \"51% - 60%\", \"61% - 70%\", \"71% - 80%\", \"81% - 90%\", \"91% - 100%\"];\n        var legend = svg1\n          .selectAll(\".legend\")\n          .data([291.5, 583, 874.5, 1166, 1457.5, 1749, 2040.5, 2332])\n          .enter()\n          .append(\"g\")\n          .attr(\"class\", \"legend\")\n          .attr(\"fill-opacity\", 0.7)\n          .attr(\"transform\", function (d, i) {\n            var height = legendRectSize + legendSpacing;\n            var horz = 5 * legendRectSize + 250;\n            var vert = i * height + 380;\n            return \"translate(\" + horz + \",\" + vert + \")\";\n          });\n\n        legend\n          .append(\"rect\")\n          .attr(\"width\", legendRectSize)\n          .attr(\"height\", legendRectSize)\n          .style(\"fill\", l_color)\n          .style(\"stroke\", l_color);\n\n        legend\n          .append(\"text\")\n          .attr(\"x\", legendRectSize + legendSpacing)\n          .attr(\"y\", legendRectSize - legendSpacing)\n          .text(function (d, i) {\n            return keys[i];\n          });\n\n        dispatch.call(\"load\", this);\n        dispatch.call(\"statechange\", this, selected_year);\n      });\n\n      // var queue = d3.queue();\n\n      // queue.defer(d3.json, \"lapd-divisions.geojson\")\n      // queue.defer(d3.json, \"data processing/dataByAreaV2.json\")\n      // queue.defer(d3.json, \"data processing/dataOverall.json\")\n\n      // queue.defer(d3.json, \"la-county.geojson\");\n      // queue.defer(d3.json, \"data processing/area_data.json\");\n      // queue.defer(d3.json, \"data processing/overall_data.json\");\n      // queue.defer(d3.json, \"data processing/bar_data.json\");\n      // queue.defer(d3.json, \"data processing/bar_overall.json\");\n\n      // queue.await(ready);\n\n      // var select_years = ['All', '2017', '2016', '2015', '2014', '2013', '2012', '2011', '2010'];\n      // var select_years = [\"All\"];\n\n      // current selection on year and area, all times and all areas by default\n      var selected_year = \"All\";\n      var selected_area = null;\n      var overall_data;\n      var area_data;\n      var bar_overall_data;\n      // var bar_data;\n      // var area_name;\n      var bar_area_data;\n      // dispatch\n      var dispatch = d3.dispatch(\"load\", \"statechange\", \"areachange\");\n\n      dispatch.on(\"load.reset\", function () {\n        var button = d3\n          .select(\"body\")\n          .select(\"div#select-year\")\n          .append(\"button\")\n          .attr(\"class\", \"btn btn-secondary\")\n          .attr(\"type\", \"button\")\n          .attr(\"disabled\", \"disabled\")\n          // .attr(\"disabled\", null)\n          .on(\"click\", function () {\n            dispatch.call(\"areachange\", this, null);\n          });\n        button.text(\"RESET\");\n\n        dispatch.on(\"areachange.reset\", function (d) {\n          if (!d) {\n            button.attr(\"disabled\", \"disabled\");\n            // button.attr(\"disabled\", null);\n            button.text(\"RESET\");\n          } else {\n            button.attr(\"disabled\", null);\n            button.text(\"RESET\");\n          }\n        });\n      });\n\n      dispatch.on(\"load.map\", function () {\n        var paths = svg1.selectAll(\"path\");\n        var paths_data = paths.data();\n        // console.log(paths_data);\n        paths.on(\"mouseout\", function () {\n          tooltip.style(\"display\", \"none\");\n        });\n        // console.log(paths_data);\n\n        // for (var j = 0; j < paths_data.length; j++) {\n        //   paths_data[j].properties.byYear = Object.fromEntries(paths_data[j].properties.byYear);\n\n        //   console.log(paths_data[j].properties.byYear);\n        // }\n\n        dispatch.on(\"statechange.map\", function (y) {\n          color.domain([\n            Math.floor(\n              d3.min(paths_data, function (d) {\n                return d.properties.byYear[y][0][\"count\"];\n              })\n            ),\n            Math.ceil(\n              d3.max(paths_data, function (d) {\n                return d.properties.byYear[y][0][\"count\"];\n              })\n            ),\n          ]);\n          paths\n            .transition()\n            .duration(800)\n            .attr(\"fill\", function (d) {\n              return color(d.properties.byYear[y][0][\"count\"]);\n            });\n          paths.on(\"mousemove\", function (event, d) {\n            //event.pageX\n            // console.log(\"inside mousemove\",d)\n            // const[x_point, y_point] = d3.pointer(d);\n            tooltip.style(\"left\", event.pageX - 230 + \"px\");\n            tooltip.style(\"top\", event.pageY - 650 + \"px\");\n            tooltip.style(\"display\", \"inline-block\");\n            tooltip.html(\n              \"<b>\" +\n                d.properties.name +\n                \"</b><br>#Avg Rent: $\" +\n                d.properties.byYear[y][0][\"count\"]\n            );\n            // var area_name = d.properties.name;\n          });\n        });\n      });\n\n      dispatch.on(\"load.line\", function () {\n        var w = 500,\n          h = 200;\n        var margin = { top: 10, right: 20, bottom: 30, left: 50 },\n          width = w - margin.left - margin.right,\n          height = h - margin.top - margin.bottom;\n        var svg = d3\n          .select(\"body\")\n          .select(\"div#map-right\")\n          .select(\"div#map-line\")\n          .append(\"svg\")\n          .attr(\"width\", w)\n          .attr(\"height\", h);\n        var g = svg\n          .append(\"g\")\n          .attr(\n            \"transform\",\n            \"translate(\" + margin.left + \",\" + margin.top + \")\"\n          );\n        // var g_temp = svg\n        //   .append(\"g\")\n        //   .attr(\n        //     \"transform\",\n        //     \"translate(\" + margin.left + \",\" + margin.top + \")\"\n        //   );\n        g.append(\"g\")\n          .attr(\"transform\", \"translate(0,\" + height + \")\")\n          .attr(\"class\", \"xaxis\");\n\n        var yg = g.append(\"g\").attr(\"class\", \"yaxis\");\n\n        yg.append(\"text\")\n          .attr(\"fill\", \"#000\")\n          .attr(\"transform\", \"rotate(-90)\")\n          .attr(\"y\", 6)\n          .attr(\"dy\", \"0.71em\")\n          .attr(\"text-anchor\", \"end\")\n          .text(\"#Rent Price\");\n\n        yg.append(\"text\")\n          .attr(\"fill\", \"#000\")\n          .attr(\"transform\", \"rotate(90)\")\n          .attr(\"x\", 50)\n          .attr(\"y\", -width + 2)\n          .attr(\"dy\", \"0.71em\")\n          .attr(\"text-anchor\", \"end\")\n          .style(\"stroke\", \"orange\")\n          .text(\"Safety Score\");\n\n        g.append(\"path\")\n          .attr(\"class\", \"path\")\n          .attr(\"fill\", \"none\")\n          .attr(\"stroke\", \" #800026\")\n          .attr(\"stroke-linejoin\", \"round\")\n          .attr(\"stroke-linecap\", \"round\")\n          .attr(\"stroke-width\", 1.5);\n        // g.append(\"g\")\n        //   .attr(\"fill\", \"steelblue\")\n        //   .attr(\"fill-opacity\", 0.8)\n        // .selectAll(\"rect\")\n        // .data(\"path\")\n        // .join(\"rect\")\n        //   .attr(\"x\", d => x(d.year))\n        //   .attr(\"width\", x.bandwidth())\n        //   .attr(\"y\", d => y1(d.sales))\n        //   .attr(\"height\", d => y1(0) - y1(d.sales))\n        var current_dataset;\n        if (selected_area == null) {\n          current_dataset = overall_data;\n        } else {\n          current_dataset = area_data[selected_area][0];\n          // console.log(current_dataset);\n        }\n        dispatch.on(\"statechange.line\", function (y) {\n          if (y == \"All\") {\n            // window.addEventListener(\"resize\", drawLine);\n            drawLine(current_dataset[\"CountByMonth\"]);\n          } else {\n            var month_filtered = Object.keys(\n              current_dataset[\"CountByMonth\"]\n            ).filter(function (key) {\n              return key.includes(y);\n            });\n            var time_subset = {};\n            for (var i = 0; i < month_filtered.length; i++) {\n              time_subset[month_filtered[i]] =\n                current_dataset[\"CountByMonth\"][month_filtered[i]];\n            }\n            // window.addEventListener(\"resize\", drawLine);\n            drawLine(time_subset);\n          }\n        });\n        dispatch.on(\"areachange.line\", function (data) {\n          var area;\n          if (!data) {\n            current_dataset = overall_data;\n            // console.log(current_dataset)\n            if (selected_year == \"All\") {\n              // window.addEventListener(\"resize\", drawLine);\n              drawLine(current_dataset[\"CountByMonth\"]);\n            } else {\n              var month_filtered = Object.keys(\n                current_dataset[\"CountByMonth\"]\n              ).filter(function (key) {\n                return key.includes(selected_year);\n              });\n              var time_subset = {};\n              for (var i = 0; i < month_filtered.length; i++) {\n                time_subset[month_filtered[i]] =\n                  current_dataset[\"CountByMonth\"][month_filtered[i]];\n              }\n              // window.addEventListener(\"resize\", drawLine);\n              drawLine(time_subset);\n            }\n          } else {\n            area = data.properties.name;\n            current_dataset = area_data[area][0];\n            if (selected_year == \"All\") {\n              // window.addEventListener(\"resize\", drawLine);\n              drawLine(current_dataset[\"CountByMonth\"]);\n            } else {\n              month_filtered = Object.keys(\n                current_dataset[\"CountByMonth\"]\n              ).filter(function (key) {\n                return key.includes(selected_year);\n              });\n              time_subset = {};\n              for (i = 0; i < month_filtered.length; i++) {\n                time_subset[month_filtered[i]] =\n                  current_dataset[\"CountByMonth\"][month_filtered[i]];\n              }\n              // window.addEventListener(\"resize\", drawLine);\n              drawLine(time_subset);\n            }\n          }\n        });\n\n        function drawLine(data) {\n          // customized multi time formats\n          // var formatMillisecond = d3.timeFormat(\".%L\"),\n          //   formatSecond = d3.timeFormat(\":%S\"),\n          //   formatMinute = d3.timeFormat(\"%I:%M\"),\n          //   formatHour = d3.timeFormat(\"%I %p\"),\n          //   formatDay = d3.timeFormat(\"%a %d\"),\n          //   formatWeek = d3.timeFormat(\"%b %d\"),\n          //   formatMonth = d3.timeFormat(\"%b\"),\n          //   formatYear = d3.timeFormat(\"%Y\");\n\n          // function multiFormat(date) {\n          //   return (d3.timeSecond(date) < date\n          //     ? formatMillisecond\n          //     : d3.timeMinute(date) < date\n          //     ? formatSecond\n          //     : d3.timeHour(date) < date\n          //     ? formatMinute\n          //     : d3.timeDay(date) < date\n          //     ? formatHour\n          //     : d3.timeMonth(date) < date\n          //     ? d3.timeWeek(date) < date\n          //       ? formatDay\n          //       : formatWeek\n          //     : d3.timeYear(date) < date\n          //     ? formatMonth\n          //     : formatYear)(date);\n          // }\n          // multiFormat()\n          // if (\"10/2017\" in data) {\n          //     delete data[\"10/2017\"];\n          // }\n\n          // var parseTime = d3.timeParse(\"%m/%Y\");\n          // var parseTime = d3.timeParse(\"%Y\");\n          // data = Object.entries(data); // [{key:.., value:..}]\n          // console.log(data);\n          // data.forEach(function (entry) {\n          //   entry[\"key\"] = parseTime(entry[\"key\"]);\n          // });\n\n          // data = Object.keys(data).sort();\n\n          // var x = d3.scaleTime()\n          //     .domain(d3.extent(data, function (d) { return d['key']; }))\n          //     .rangeRound([0, width]);\n          // console.log(Object.keys(data));\n\n          var new_data = {};\n          // console.log(data);\n          data = Object.entries(data);\n          data.forEach(function (d) {\n            d[0] = d[0].slice(3);\n            new_data[d[0]] = d[1];\n          });\n          // console.log(data1);\n          // console.log(new_data);\n\n          data = new_data;\n\n          var x = d3\n            .scaleBand()\n            .padding(0.1)\n            .domain(Object.keys(data))\n            .rangeRound([0, width]);\n\n          var y1 = d3\n            .scaleLinear()\n            .domain(d3.extent(Object.values(data)))\n            .rangeRound([height, 0])\n            .nice();\n\n          // var y2 = d3.scaleLinear()\n          //     .domain(d3.extent(data, function (d) { return d['value']; }))\n          //     .rangeRound([height, 0])\n          //     .nice();\n\n          g.select(\"g.xaxis\").transition().duration(400).call(d3.axisBottom(x));\n\n          g.select(\"g.yaxis\")\n            .transition()\n            .duration(400)\n            .call(d3.axisLeft(y1).tickFormat(d3.format(\"$\")));\n\n          yg.selectAll(\"text\")\n            .style(\"stroke\", \"#800026\")\n            .attr(\"stroke-width\", 0.2);\n\n          data = Object.entries(data);\n          // console.log(data);\n          // console.log(temp_list);\n          // console.log(Object.entries(data));\n          g.select(\"path.path\")\n            .data([data])\n            .transition()\n            .duration(400)\n            .style(\"stroke\", \"#800026\")\n            .attr(\n              \"d\",\n              d3\n                .line()\n                .x(function (d) {\n                  // console.log(x(d[0])+30);\n                  return x(d[0]) + 30;\n                })\n                .y(function (d) {\n                  // console.log(y1(d[1]));\n                  return y1(d[1]);\n                })\n            );\n        }\n      });\n\n      dispatch.on(\"load.bar\", function () {\n        var w = 550,\n          h = 200;\n        // var theData = undefined;\n\n        var margin = { top: 10, right: 20, bottom: 30, left: 100, extra: 50 };\n        // width = w - margin.left - margin.right,\n        // height = h - margin.top - margin.bottom;\n\n        var x2 = d3.scaleBand().padding(0.1);\n        var y2 = d3.scaleLinear();\n\n        var svg2 = d3\n          .select(\"body\")\n          .select(\"div#map-right\")\n          .select(\"div#map-line\")\n          .select(\"svg\")\n          .attr(\"width\", w)\n          .attr(\"height\", h);\n\n        var g2 = svg2\n          .append(\"g\")\n          .attr(\n            \"transform\",\n            \"translate(\" + margin.extra + \",\" + margin.top + \")\"\n          );\n\n        g2.append(\"g\").attr(\"class\", \"axis axis--x\");\n\n        g2.append(\"g\").attr(\"class\", \"axis axis--y\");\n\n        var current_dataset;\n        if (selected_area == null) {\n          current_dataset = bar_overall_data;\n        } else {\n          current_dataset = bar_area_data[selected_area][0];\n        }\n        \n        dispatch.on(\"statechange.bar\", function (y) {\n          if (y == \"All\") {\n            // window.addEventListener(\"resize\", drawBar);\n            drawBar(current_dataset[\"CountByMonth\"]);\n          } else {\n            var month_filtered = Object.keys(\n              current_dataset[\"CountByMonth\"]\n            ).filter(function (key) {\n              return key.includes(y);\n            });\n            var time_subset = {};\n            for (var i = 0; i < month_filtered.length; i++) {\n              time_subset[month_filtered[i]] =\n                current_dataset[\"CountByMonth\"][month_filtered[i]];\n            }\n            // window.addEventListener(\"resize\", drawBar);\n            drawBar(time_subset);\n          }\n        });\n        dispatch.on(\"areachange.bar\", function (data1) {\n          // console.log(\"areachange_bar\",data1)\n          var area;\n          if (!data1) {\n            current_dataset = bar_overall_data;\n            if (selected_year == \"All\") {\n              // window.addEventListener(\"resize\", drawBar);\n              drawBar(current_dataset[\"CountByMonth\"]);\n            } else {\n              var month_filtered = Object.keys(\n                current_dataset[\"CountByMonth\"]\n              ).filter(function (key) {\n                return key.includes(selected_year);\n              });\n              var time_subset = {};\n              for (var i = 0; i < month_filtered.length; i++) {\n                time_subset[month_filtered[i]] =\n                  current_dataset[\"CountByMonth\"][month_filtered[i]];\n              }\n              // window.addEventListener(\"resize\", drawBar);\n              drawBar(time_subset);\n            }\n          } else {\n            // this.__data__.properties.name\n            area = data1.properties.name;\n            for (i = 0; i < bar_area_data.length; i++) {\n              if (bar_area_data[i][\"Area Name\"] == area) {\n                current_dataset = bar_area_data[i];\n              }\n            }\n            // console.log(current_dataset);\n            // current_dataset = bar_area_data[area][0];\n            if (selected_year == \"All\") {\n              // window.addEventListener(\"resize\", drawBar);\n              drawBar(current_dataset[\"CountByMonth\"]);\n            } else {\n              month_filtered = Object.keys(\n                current_dataset[\"CountByMonth\"]\n              ).filter(function (key) {\n                return key.includes(selected_year);\n              });\n              time_subset = {};\n              for (i = 0; i < month_filtered.length; i++) {\n                time_subset[month_filtered[i]] =\n                  current_dataset[\"CountByMonth\"][month_filtered[i]];\n              }\n              // window.addEventListener(\"resize\", drawBar);\n              drawBar(time_subset);\n            }\n          }\n        });\n\n        function drawBar(data1) {\n          var bounds = svg2.node().getBoundingClientRect(),\n            width = bounds.width - margin.left - margin.right,\n            height1 = bounds.height - margin.top - margin.bottom;\n          // height = bounds.height - margin.top - margin.bottom;\n\n          // console.log(height1);\n          var new_data = {};\n          // console.log(data1);\n          data1 = Object.entries(data1);\n          data1.forEach(function (d) {\n            d[0] = d[0].slice(3);\n            new_data[d[0]] = d[1];\n          });\n          // console.log(data1);\n          // console.log(new_data);\n\n          data1 = new_data;\n\n          x2.rangeRound([0, width]);\n          y2.rangeRound([height1, 0]);\n\n          x2.domain(Object.keys(data1));\n          y2.domain([0, d3.max(Object.values(data1))]);\n\n          g2.select(\".axis--x\")\n            .attr(\"transform\", \"translate(0,\" + height + \")\")\n            .call(d3.axisBottom(x2));\n\n          g2.select(\".axis--y\")\n            .attr(\"transform\", \"translate(\" + width + \",0)\")\n            .call(d3.axisRight(y2).tickFormat(d3.format(\"d\")));\n\n          g2.selectAll(\"text\")\n            .style(\"stroke\", \"orange\")\n            .attr(\"stroke-width\", 0.2);\n\n          data1 = Object.entries(data1);\n          var bars = g2.selectAll(\".bar\").data(data1);\n          // .enter().append(\"g\").attr(\"class\", \"bar\");\n\n          // ENTER\n          bars\n            .enter()\n            .append(\"rect\")\n            .attr(\"class\", \"bar\")\n            .attr(\"x\", function (d) {\n              return x2(d[0]);\n            })\n            .attr(\"y\", function (d) {\n              return y2(d[1]);\n            })\n            .attr(\"width\", x2.bandwidth())\n            .attr(\"height\", function (d) {\n              return height1 - y2(d[1]);\n            });\n\n          // UPDATE\n          bars\n            .attr(\"x\", function (d) {\n              return x2(d[0]);\n            })\n            .attr(\"y\", function (d) {\n              return y2(d[1]);\n            })\n            .attr(\"width\", x2.bandwidth())\n            .attr(\"height\", function (d) {\n              return height1 - y2(d[1]);\n            });\n          // bars\n          //   .remove()\n          //   .selectAll(\".bar\")\n          //   .data(data1)\n          //   .select(\"rect\")\n          //   .transition()\n          //   .attr(\"x\", function (d) {\n          //     console.log(d[0]);\n          //     return x2(d[0]);\n          //   })\n          //   .attr(\"y\", function (d) {\n          //     // console.log(d[1]);\n          //     return y2(d[1]);\n          //   })\n          //   .attr(\"width\", x2.bandwidth())\n          //   .attr(\"height\", function (d) {\n          //     console.log(d[1]);\n          //     return height1 - y2(d[1]);\n          //   });\n\n          bars.on(\"mousemove\", function (event, d) {\n            // const[x_point, y_point] = d3.pointer(d);\n            tooltip_bar.style(\"left\", event.pageX - 810 + \"px\");\n            tooltip_bar.style(\"top\", event.pageY - 550 + \"px\");\n            tooltip_bar.style(\"display\", \"inline-block\");\n            tooltip_bar.html(\n              \"<b>Year: \" + d[0] + \"</b><br>Safety Score: \" + d[1]\n            );\n          });\n\n          bars.on(\"mouseout\", function () {\n            tooltip_bar.style(\"display\", \"none\");\n          });\n          // EXIT\n          bars.exit().remove();\n\n          // dispatch.on(\"areachange.areaname\", function (area_name) {\n          //      d3.select('body')\n          //         .select('div#map-right')\n          //         .select(\"div#map-line\")\n          //         .select(\"#area_name\")\n          //         .text(area_name);\n          // }\n\n          // var x = d3.scaleTime()\n          //     .domain(d3.extent(data, function (d) { return d['key']; }))\n          //     .rangeRound([0, width]);\n          // var y = d3.scaleLinear()\n          //     .domain(d3.extent(data, function (d) { return d['value']; }))\n          //     .rangeRound([height, 0])\n          //     .nice();\n          // var bar = d3.line()\n          //     .x(function (d) { return x(d['key']); })\n          //     .y(function (d) { return y(d['value']); });\n          // g2.select(\"g.xaxis\")\n          //     .transition()\n          //     .duration(400)\n          //     .call(d3.axisBottom(x).tickFormat(multiFormat));\n          // g2.select(\"g.yaxis\")\n          //     .transition()\n          //     .duration(400)\n          //     .call(d3.axisLeft(y).tickFormat(d3.format(\"$\")));\n          // g2.select(\"path.path\")\n          //     .datum(data)\n          //     .transition()\n          //     .duration(400)\n          //     .attr(\"d\", line2);\n        }\n      });\n\n      dispatch.on(\"statechange.title\", function (y) {\n        \n        d3.select(\"body\")\n          .select(\"div#area\")\n          .select(\"span#current-area\")\n          .text(\n            (selected_area == null ? \"All Divisions\" : selected_area) +\n              \" - \" +\n              (y == \"All\" ? \"All Times\" : y)\n          );\n      });\n\n      dispatch.on(\"areachange.title\", function (data1) {\n        d3.selectAll(\"path\").classed(\"selected\", false);\n        if (data1) {\n          selected_area = data1.properties.name;\n        } else {\n          selected_area = null;\n        }\n\n        // title on selected area\n        d3.select(\"body\")\n            .select(\"div#map-right\")\n            .select(\"div#area_name\")\n            .text(selected_area ? selected_area : \"All Neighborhood\");\n      });\n\n      // function ready(error, geojson, areadata, overall, bar_data, bar_overall) {\n      //   if (error) throw error;\n      //   overall_data = overall;\n      //   bar_overall_data = bar_overall;\n      //   area_data = d3\n      //     .group(function (d) {\n      //       return d[\"Area Name\"];\n      //     })\n      //     .object(areadata);\n      //   // d3\n      //   // .nest()\n      //   // .key(function (d) {\n      //   //   return d[\"Area Name\"];\n      //   // })\n      //   // .object(areadata);\n      //   bar_area_data = bar_data;\n      //   console.log(bar_area_data);\n      //   var json_features = dataPrep(geojson, areadata);\n      //   // var json_features1 = dataPrep1(geojson, bar_data);\n      //   // col = [\"#67001f\",\"#b2182b\",\"#d6604d\",\"#f4a582\",\"#fddbc7\",\"#f7f7f7\",\"#d1e5f0\",\"#92c5de\",\"#4393c3\",\"#2166ac\",\"#053061\"]\n      //   var col = [\n      //     \"#ffffcc\",\n      //     \"#ffeda0\",\n      //     \"#fed976\",\n      //     \"#feb24c\",\n      //     \"#fd8d3c\",\n      //     \"#fc4e2a\",\n      //     \"#e31a1c\",\n      //     \"#bd0026\",\n      //     \"#800026\",\n      //   ];\n      //   color = d3.scaleQuantize().range(col);\n      //   // .range(d3.schemeReds[9]);\n      //   svg1\n      //     .selectAll(\"path\")\n      //     .data(json_features)\n      //     .enter()\n      //     .append(\"path\")\n      //     .attr(\"class\", \"map\")\n      //     .attr(\"d\", path)\n      //     .on(\"click\", function (d) {\n      //       dispatch.call(\"areachange\", this, d);\n      //       // dispatch.call(\"areachange\", this, d);\n      //       d3.select(this).classed(\"selected\", true);\n      //     });\n      //   // right part\n      //   // line chart\n      //   // initLine();\n\n      //   dispatch.call(\"load\", this);\n      //   dispatch.call(\"statechange\", this, selected_year);\n      // }\n\n      function dataPrep(geojson, areadata) {\n        var json_features = geojson.features;\n        var crime_count = new Map();\n        var year_area_count = [];\n        for (var i = 0; i < areadata.length; i++) {\n          var total_count = areadata[i][\"count\"];\n          var years = Object.keys(areadata[i][\"byYear\"]);\n          var area = areadata[i][\"Area Name\"];\n          for (var j = 0; j < years.length; j++) {\n            var count = areadata[i][\"byYear\"][years[j]][\"count\"];\n            year_area_count.push({\n              year: years[j],\n              \"Area Name\": area,\n              count: count,\n            });\n          }\n          year_area_count.push({\n            year: \"All\",\n            \"Area Name\": area,\n            count: total_count,\n          });\n        }\n        var nested_data = d3.group(\n          year_area_count,\n          function (d) {\n            return d[\"Area Name\"];\n          },\n          function (d) {\n            return d[\"year\"];\n          }\n        );\n        nested_data = Object.fromEntries(nested_data);\n        // .object(year_area_count);\n        // d3\n        // .nest()\n        // .key(function (d) {\n        //   return d[\"Area Name\"];\n        // })\n        // .key(function (d) {\n        //   return d[\"year\"];\n        // })\n        // .object(year_area_count);\n\n        for (i = 0; i < areadata.length; i++) {\n          crime_count.set(areadata[i][\"Area Name\"], +areadata[i].count);\n        }\n        for (i = 0; i < json_features.length; i++) {\n          var cur_id = json_features[i].properties.name;\n          if (cur_id in nested_data) {\n            nested_data[cur_id] = Object.fromEntries(nested_data[cur_id]);\n            json_features[i].properties.byYear = nested_data[cur_id];\n          } else {\n            var temp = [];\n            temp.push({\n              year: \"All\",\n              \"Area Name\": json_features[i].properties.name,\n              count: 0,\n            });\n            var temp2 = { All: temp };\n            // console.log(temp2);\n            json_features[i].properties.byYear = temp2;\n          }\n        }\n        return json_features;\n      }\n    },\n  },\n  mounted: function () {\n    // console.log(\"mounted\");\n    // console.log(\"CombinedChart packing\", d3.version);\n    this.CombinedChart();\n  },\n};\n</script>\n\n<!-- \"scoped\" attribute limits CSS to this component only -->\n<style scoped>\n>>> path.map {\n  fill-opacity: 0.7;\n  stroke: #fff;\n  stroke-width: 1px;\n}\n\n>>> path.map:hover {\n  fill-opacity: 1;\n  stroke: #000;\n  stroke-width: 1px;\n}\n>>> path.map.selected {\n  fill-opacity: 0.75;\n  fill: #000000;\n}\n\n>>> .toolTip {\n  font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n  position: absolute;\n  display: none;\n  width: auto;\n  height: auto;\n  background: none repeat scroll 0 0 white;\n  border: 0 none;\n  border-radius: 8px 8px 8px 8px;\n  box-shadow: -3px 3px 15px #888888;\n  color: black;\n  font: 12px sans-serif;\n  padding: 5px;\n  text-align: center;\n}\n>>> .line {\n  fill: none;\n  stroke: steelblue;\n  stroke-width: 4px;\n}\n\n>>> .axisSteelBlue text {\n  fill: steelblue;\n}\n\n>>> .axisRed text {\n  fill: red;\n}\n\n>>> text {\n  font-family: sans-serif;\n}\n\n>>> .area_text {\n  font-family: sans-serif;\n}\n\n>>> .bar {\n  fill: Orange;\n  opacity: 0.4;\n}\n\n>>> .bar:hover {\n  fill: pink;\n}\n\n>>> .axis--x path {\n  display: none;\n}\n\n>>> .rightAxis {\n  fill: #ffffcc;\n}\n\n>>> .leftAxis {\n  color: #800026;\n}\n\n>>> .d3-legend {\n  position: absolute;\n  fill-opacity: 0.7;\n  left: 500px;\n  top: 450px;\n}\n</style>\n"],"sourceRoot":"src/views"}]}