{"remainingRequest":"/Users/posha/Documents/GitHub/DSCI554/project-the-vizards/demo/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/posha/Documents/GitHub/DSCI554/project-the-vizards/demo/src/views/CombinedChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/posha/Documents/GitHub/DSCI554/project-the-vizards/demo/src/views/CombinedChart.vue","mtime":1606717047710},{"path":"/Users/posha/Documents/GitHub/DSCI554/project-the-vizards/demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/posha/Documents/GitHub/DSCI554/project-the-vizards/demo/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/posha/Documents/GitHub/DSCI554/project-the-vizards/demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/posha/Documents/GitHub/DSCI554/project-the-vizards/demo/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["CombinedChart.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAufile":"CombinedChart.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"CombinedChart\">\n    <link href=\"css/bootstrap/bootstrap.min.css\" rel=\"stylesheet\" />\n    <div id=\"area\" class=\"jumbotron\">\n      <h4>Correlation between Safety Score Vs Rent price in Los Angeles</h4>\n      <br />\n      <p>\n        To understand the relationship between the rent and crime more\n        cohesively, we decided to introduce a new attribute, called, “Safety\n        Score”. This was calculated to consider that different crime types have\n        different severity levels and hence, should be given higher weightage\n        even if their frequency is low. Therefore, we calculated the crime score\n        first by aligning each crime type to it’s severity. After calculating\n        the crime score, the safety score were calculated using the crime score.\n      </p>\n\n      <h5>Safety Score Calculation</h5>\n      <p>\n        The crime dataset consists of a list of crimes with varying severity.\n        Intuitively, it can be understood that the more serious the crime the\n        higher it impacts the perception of security in a location. Based on\n        <a href=\"https://doi.org/10.1093/police/pax049\" target=\"_blank\"\n          >Comparing Methods for Measuring Crime Harm/Severity</a\n        >, weights are assigned to every crime and an overall value is\n        calculated for each location. Each crime in the crime dataset was\n        compared with the list of Notifiable Offence List Categories and given\n        the Crime Severity Score. The Crime Severity Score (CSS) is the score\n        assigned to a crime based on the mean sentence passed on those who were\n        convicted of the offense. Each score is normalized and the final crime\n        values for each location is calculated using the dot product of the\n        crime weight and the crime frequency matrices. Using these crime scores,\n        the safety scores are calculated by taking their negatives.\n      </p>\n\n      <h5>Final chart</h5>\n      <p>\n        In the cloropleth map on this page, the colors indicate the average rent\n        price for each neighborhood. When hovered over a neighborhood, the\n        average rent over the years in that neighborhood is shown in the\n        tooltip. Through the interactive feature, which allows users to select a\n        specific neighborhood on the map, one can dive deeper into the trends of\n        both safety score and average rent over the years for that specific\n        neighborhood. In general, the user can observe that as the safety score\n        increases, the rent price increases.\n      </p>\n      <div class=\"container\">\n        <div class=\"row\">\n          <div class=\"col-md-6\">\n            <div id=\"select-year\" style=\"text-align: center\"></div>\n            <div id=\"map-left\">\n              <!-- <svg id = \"svg_chart\"></svg> -->\n            </div>\n          </div>\n          <div id=\"map-right\" class=\"col-md-6\">\n            <h4 style=\"text-align: center\">\n              Safety Score Vs Rent price in LA by year\n            </h4>\n            <h6>* Line Chart Represents Rent Price</h6>\n            <h6>* Bar Chart Represents Safety Score</h6>\n            <div class=\"row\" id=\"map-line2\"></div>\n            <div class=\"row\" id=\"map-line\"></div>\n            <div id=\"area_name\"></div>\n            <!-- <svg class=\"row\" id=\"bar_chart\" width=\"100%\" height=\"500px\"></svg> -->\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport * as d3 from \"d3\";\n\nexport default {\n  name: \"CombinedChart\",\n  data: function () {\n    return {\n      chartData: null,\n    };\n  },\n  methods: {\n    CombinedChart() {\n      var width = 500;\n      var height = 600;\n      var projection = d3\n        .geoMercator()\n        .scale(15000)\n        // .scale(40000)\n        // Center the Map in LA\n        .center([-118.245, 34.05])\n        .translate([width / 2, height / 2]);\n      // var projection = d3.geoAlbersUsa()\n      //     .translate([width / 2, height / 2])\n      //     .scale([5000]);\n\n      // var tooltip = d3.select(\"body\").append(\"div\").attr(\"class\", \"toolTip\");\n      var tooltip = d3\n        .select(\"#map-left\")\n        .append(\"div\")\n        .attr(\"class\", \"toolTip\");\n      var tooltip_bar = d3\n        .select(\"#map-right\")\n        .append(\"div\")\n        .attr(\"class\", \"toolTip\");\n      // var tooltip_bar = d3.select(\"body\").append(\"div\").attr(\"class\", \"toolTip\");\n\n      var path = d3.geoPath().projection(projection);\n      var svg1 = d3\n        .select(\"body\")\n        .select(\"div#map-left\")\n        .append(\"svg\")\n        // .attr(\"viewBox\", \"0 0 500 600\");\n        .attr(\"width\", width)\n        .attr(\"height\", height);\n      var color;\n      // multiple async tasks\n\n      var files = [\n        \"la-county.geojson\",\n        \"area_data.json\",\n        \"overall_data.json\",\n        \"bar_data.json\",\n        \"bar_overall.json\",\n      ];\n      var promises = [];\n\n      files.forEach(function (url) {\n        promises.push(d3.json(url));\n      });\n      Promise.all(promises).then(function (values) {\n        var geojson = values[0];\n        var areadata = values[1];\n        var overall = values[2];\n        var bar_data = values[3];\n        var bar_overall = values[4];\n        overall_data = overall;\n        bar_overall_data = bar_overall;\n        area_data = d3.group(areadata, function (d) {\n          return d[\"Area Name\"];\n        });\n        area_data = Object.fromEntries(area_data);\n        // .object(areadata);\n        // d3\n        // .nest()\n        // .key(function (d) {\n        //   return d[\"Area Name\"];\n        // })\n        // .object(areadata);\n        bar_area_data = bar_data;\n        var json_features = dataPrep(geojson, areadata);\n        // console.log(json_features);\n        // var json_features1 = dataPrep1(geojson, bar_data);\n        // col = [\"#67001f\",\"#b2182b\",\"#d6604d\",\"#f4a582\",\"#fddbc7\",\"#f7f7f7\",\"#d1e5f0\",\"#92c5de\",\"#4393c3\",\"#2166ac\",\"#053061\"]\n        var col = [\n          \"#ffffcc\",\n          \"#ffeda0\",\n          \"#fed976\",\n          \"#feb24c\",\n          \"#fd8d3c\",\n          \"#fc4e2a\",\n          \"#e31a1c\",\n          \"#bd0026\",\n          \"#800026\",\n        ];\n        color = d3.scaleQuantize().range(col);\n        // .range(d3.schemeReds[9]);\n        svg1\n          .selectAll(\"path\")\n          .data(json_features)\n          .enter()\n          .append(\"path\")\n          .attr(\"class\", \"map\")\n          .attr(\"d\", path)\n          .on(\"click\", function (e, d) {\n            dispatch.call(\"areachange\", this, d);\n            // dispatch.call(\"areachange\", this, d);\n            d3.select(this).classed(\"selected\", true);\n          });\n        // right part\n        // line chart\n        // initLine();\n        // Adding legend\n        var l_color = d3.scaleQuantize([0, 2332], col);\n        var legendRectSize = 18;\n        var legendSpacing = 4;\n        var keys = [\n          \"$0 - $291.5\",\n          \"$291.6 - $583\",\n          \"$584 - $874.5\",\n          \"$874.6 - $1166\",\n          \"$1167 - $1457.5\",\n          \"$1457.6 - $1749\",\n          \"$1750 - $2040.5\",\n          \"$2040.6 - $2332\",\n        ];\n        // var keys = [\"1% - 10%\", \"11% - 20%\", \"21% - 30%\", \"31% - 40%\", \"41% - 50%\", \"51% - 60%\", \"61% - 70%\", \"71% - 80%\", \"81% - 90%\", \"91% - 100%\"];\n        var legend = svg1\n          .selectAll(\".legend\")\n          .data([291.5, 583, 874.5, 1166, 1457.5, 1749, 2040.5, 2332])\n          .enter()\n          .append(\"g\")\n          .attr(\"class\", \"legend\")\n          .attr(\"fill-opacity\", 0.7)\n          .attr(\"transform\", function (d, i) {\n            var height = legendRectSize + legendSpacing;\n            var horz = 5 * legendRectSize + 250;\n            var vert = i * height + 380;\n            return \"translate(\" + horz + \",\" + vert + \")\";\n          });\n\n        legend\n          .append(\"rect\")\n          .attr(\"width\", legendRectSize)\n          .attr(\"height\", legendRectSize)\n          .style(\"fill\", l_color)\n          .style(\"stroke\", l_color);\n\n        legend\n          .append(\"text\")\n          .attr(\"x\", legendRectSize + legendSpacing)\n          .attr(\"y\", legendRectSize - legendSpacing)\n          .text(function (d, i) {\n            return keys[i];\n          });\n\n        dispatch.call(\"load\", this);\n        dispatch.call(\"statechange\", this, selected_year);\n      });\n\n      // var queue = d3.queue();\n\n      // queue.defer(d3.json, \"lapd-divisions.geojson\")\n      // queue.defer(d3.json, \"data processing/dataByAreaV2.json\")\n      // queue.defer(d3.json, \"data processing/dataOverall.json\")\n\n      // queue.defer(d3.json, \"la-county.geojson\");\n      // queue.defer(d3.json, \"data processing/area_data.json\");\n      // queue.defer(d3.json, \"data processing/overall_data.json\");\n      // queue.defer(d3.json, \"data processing/bar_data.json\");\n      // queue.defer(d3.json, \"data processing/bar_overall.json\");\n\n      // queue.await(ready);\n\n      // var select_years = ['All', '2017', '2016', '2015', '2014', '2013', '2012', '2011', '2010'];\n      // var select_years = [\"All\"];\n\n      // current selection on year and area, all times and all areas by default\n      var selected_year = \"All\";\n      var selected_area = null;\n      var overall_data;\n      var area_data;\n      var bar_overall_data;\n      // var bar_data;\n      // var area_name;\n      var bar_area_data;\n      // dispatch\n      var dispatch = d3.dispatch(\"load\", \"statechange\", \"areachange\");\n\n      dispatch.on(\"load.reset\", function () {\n        var button = d3\n          .select(\"body\")\n          .select(\"div#select-year\")\n          .append(\"button\")\n          .attr(\"class\", \"btn btn-secondary\")\n          .attr(\"type\", \"button\")\n          .attr(\"disabled\", \"disabled\")\n          // .attr(\"disabled\", null)\n          .on(\"click\", function () {\n            dispatch.call(\"areachange\", this, null);\n          });\n        button.text(\"RESET\");\n\n        dispatch.on(\"areachange.reset\", function (d) {\n          if (!d) {\n            button.attr(\"disabled\", \"disabled\");\n            // button.attr(\"disabled\", null);\n            button.text(\"RESET\");\n          } else {\n            button.attr(\"disabled\", null);\n            button.text(\"RESET\");\n          }\n        });\n      });\n\n      dispatch.on(\"load.map\", function () {\n        var paths = svg1.selectAll(\"path\");\n        var paths_data = paths.data();\n        // console.log(paths_data);\n        paths.on(\"mouseout\", function () {\n          tooltip.style(\"display\", \"none\");\n        });\n        // console.log(paths_data);\n\n        // for (var j = 0; j < paths_data.length; j++) {\n        //   paths_data[j].properties.byYear = Object.fromEntries(paths_data[j].properties.byYear);\n\n        //   console.log(paths_data[j].properties.byYear);\n        // }\n\n        dispatch.on(\"statechange.map\", function (y) {\n          color.domain([\n            Math.floor(\n              d3.min(paths_data, function (d) {\n                return d.properties.byYear[y][0][\"count\"];\n              })\n            ),\n            Math.ceil(\n              d3.max(paths_data, function (d) {\n                return d.properties.byYear[y][0][\"count\"];\n              })\n            ),\n          ]);\n          paths\n            .transition()\n            .duration(800)\n            .attr(\"fill\", function (d) {\n              return color(d.properties.byYear[y][0][\"count\"]);\n            });\n          paths.on(\"mousemove\", function (event, d) {\n            //event.pageX\n            // console.log(\"inside mousemove\",d)\n            // const[x_point, y_point] = d3.pointer(d);\n            tooltip.style(\"left\", event.pageX - 230 + \"px\");\n            tooltip.style(\"top\", event.pageY - 650 + \"px\");\n            tooltip.style(\"display\", \"inline-block\");\n            tooltip.html(\n              \"<b>\" +\n                d.properties.name +\n                \"</b><br>#Avg Rent: $\" +\n                d.properties.byYear[y][0][\"count\"]\n            );\n            // var area_name = d.properties.name;\n          });\n        });\n      });\n\n      dispatch.on(\"load.line\", function () {\n        var w = 500,\n          h = 200;\n        var margin = { top: 10, right: 20, bottom: 30, left: 50 },\n          width = w - margin.left - margin.right,\n          height = h - margin.top - margin.bottom;\n        var svg = d3\n          .select(\"body\")\n          .select(\"div#map-right\")\n          .select(\"div#map-line\")\n          .append(\"svg\")\n          .attr(\"width\", w)\n          .attr(\"height\", h);\n        var g = svg\n          .append(\"g\")\n          .attr(\n            \"transform\",\n            \"translate(\" + margin.left + \",\" + margin.top + \")\"\n          );\n        // var g_temp = svg\n        //   .append(\"g\")\n        //   .attr(\n        //     \"transform\",\n        //     \"translate(\" + margin.left + \",\" + margin.top + \")\"\n        //   );\n        g.append(\"g\")\n          .attr(\"transform\", \"translate(0,\" + height + \")\")\n          .attr(\"class\", \"xaxis\");\n\n        var yg = g.append(\"g\").attr(\"class\", \"yaxis\");\n\n        yg.append(\"text\")\n          .attr(\"fill\", \"#000\")\n          .attr(\"transform\", \"rotate(-90)\")\n          .attr(\"y\", 6)\n          .attr(\"dy\", \"0.71em\")\n          .attr(\"text-anchor\", \"end\")\n          .text(\"#Rent Price\");\n\n        yg.append(\"text\")\n          .attr(\"fill\", \"#000\")\n          .attr(\"transform\", \"rotate(90)\")\n          .attr(\"x\", 50)\n          .attr(\"y\", -width + 2)\n          .attr(\"dy\", \"0.71em\")\n          .attr(\"text-anchor\", \"end\")\n          .style(\"stroke\", \"orange\")\n          .text(\"Safety Score\");\n\n        g.append(\"path\")\n          .attr(\"class\", \"path\")\n          .attr(\"fill\", \"none\")\n          .attr(\"stroke\", \" #800026\")\n          .attr(\"stroke-linejoin\", \"round\")\n          .attr(\"stroke-linecap\", \"round\")\n          .attr(\"stroke-width\", 1.5);\n        // g.append(\"g\")\n        //   .attr(\"fill\", \"steelblue\")\n        //   .attr(\"fill-opacity\", 0.8)\n        // .selectAll(\"rect\")\n        // .data(\"path\")\n        // .join(\"rect\")\n        //   .attr(\"x\", d => x(d.year))\n        //   .attr(\"width\", x.bandwidth())\n        //   .attr(\"y\", d => y1(d.sales))\n        //   .attr(\"height\", d => y1(0) - y1(d.sales))\n        var current_dataset;\n        if (selected_area == null) {\n          current_dataset = overall_data;\n        } else {\n          current_dataset = area_data[selected_area][0];\n          // console.log(current_dataset);\n        }\n        dispatch.on(\"statechange.line\", function (y) {\n          if (y == \"All\") {\n            // window.addEventListener(\"resize\", drawLine);\n            drawLine(current_dataset[\"CountByMonth\"]);\n          } else {\n            var month_filtered = Object.keys(\n              current_dataset[\"CountByMonth\"]\n            ).filter(function (key) {\n              return key.includes(y);\n            });\n            var time_subset = {};\n            for (var i = 0; i < month_filtered.length; i++) {\n              time_subset[month_filtered[i]] =\n                current_dataset[\"CountByMonth\"][month_filtered[i]];\n            }\n            // window.addEventListener(\"resize\", drawLine);\n            drawLine(time_subset);\n          }\n        });\n        dispatch.on(\"areachange.line\", function (data) {\n          var area;\n          if (!data) {\n            current_dataset = overall_data;\n            // console.log(current_dataset)\n            if (selected_year == \"All\") {\n              // window.addEventListener(\"resize\", drawLine);\n              drawLine(current_dataset[\"CountByMonth\"]);\n            } else {\n              var month_filtered = Object.keys(\n                current_dataset[\"CountByMonth\"]\n              ).filter(function (key) {\n                return key.includes(selected_year);\n              });\n              var time_subset = {};\n              for (var i = 0; i < month_filtered.length; i++) {\n                time_subset[month_filtered[i]] =\n                  current_dataset[\"CountByMonth\"][month_filtered[i]];\n              }\n              // window.addEventListener(\"resize\", drawLine);\n              drawLine(time_subset);\n            }\n          } else {\n            area = data.properties.name;\n            current_dataset = area_data[area][0];\n            if (selected_year == \"All\") {\n              // window.addEventListener(\"resize\", drawLine);\n              drawLine(current_dataset[\"CountByMonth\"]);\n            } else {\n              month_filtered = Object.keys(\n                current_dataset[\"CountByMonth\"]\n              ).filter(function (key) {\n                return key.includes(selected_year);\n              });\n              time_subset = {};\n              for (i = 0; i < month_filtered.length; i++) {\n                time_subset[month_filtered[i]] =\n                  current_dataset[\"CountByMonth\"][month_filtered[i]];\n              }\n              // window.addEventListener(\"resize\", drawLine);\n              drawLine(time_subset);\n            }\n          }\n        });\n\n        function drawLine(data) {\n          // customized multi time formats\n          // var formatMillisecond = d3.timeFormat(\".%L\"),\n          //   formatSecond = d3.timeFormat(\":%S\"),\n          //   formatMinute = d3.timeFormat(\"%I:%M\"),\n          //   formatHour = d3.timeFormat(\"%I %p\"),\n          //   formatDay = d3.timeFormat(\"%a %d\"),\n          //   formatWeek = d3.timeFormat(\"%b %d\"),\n          //   formatMonth = d3.timeFormat(\"%b\"),\n          //   formatYear = d3.timeFormat(\"%Y\");\n\n          // function multiFormat(date) {\n          //   return (d3.timeSecond(date) < date\n          //     ? formatMillisecond\n          //     : d3.timeMinute(date) < date\n          //     ? formatSecond\n          //     : d3.timeHour(date) < date\n          //     ? formatMinute\n          //     : d3.timeDay(date) < date\n          //     ? formatHour\n          //     : d3.timeMonth(date) < date\n          //     ? d3.timeWeek(date) < date\n          //       ? formatDay\n          //       : formatWeek\n          //     : d3.timeYear(date) < date\n          //     ? formatMonth\n          //     : formatYear)(date);\n          // }\n          // multiFormat()\n          // if (\"10/2017\" in data) {\n          //     delete data[\"10/2017\"];\n          // }\n\n          // var parseTime = d3.timeParse(\"%m/%Y\");\n          // var parseTime = d3.timeParse(\"%Y\");\n          // data = Object.entries(data); // [{key:.., value:..}]\n          // console.log(data);\n          // data.forEach(function (entry) {\n          //   entry[\"key\"] = parseTime(entry[\"key\"]);\n          // });\n\n          // data = Object.keys(data).sort();\n\n          // var x = d3.scaleTime()\n          //     .domain(d3.extent(data, function (d) { return d['key']; }))\n          //     .rangeRound([0, width]);\n          // console.log(Object.keys(data));\n\n          var new_data = {};\n          // console.log(data);\n          data = Object.entries(data);\n          data.forEach(function (d) {\n            d[0] = d[0].slice(3);\n            new_data[d[0]] = d[1];\n          });\n          // console.log(data1);\n          // console.log(new_data);\n\n          data = new_data;\n\n          var x = d3\n            .scaleBand()\n            .padding(0.1)\n            .domain(Object.keys(data))\n            .rangeRound([0, width]);\n\n          var y1 = d3\n            .scaleLinear()\n            .domain(d3.extent(Object.values(data)))\n            .rangeRound([height, 0])\n            .nice();\n\n          // var y2 = d3.scaleLinear()\n          //     .domain(d3.extent(data, function (d) { return d['value']; }))\n          //     .rangeRound([height, 0])\n          //     .nice();\n\n          g.select(\"g.xaxis\").transition().duration(400).call(d3.axisBottom(x));\n\n          g.select(\"g.yaxis\")\n            .transition()\n            .duration(400)\n            .call(d3.axisLeft(y1).tickFormat(d3.format(\"$\")));\n\n          yg.selectAll(\"text\")\n            .style(\"stroke\", \"#800026\")\n            .attr(\"stroke-width\", 0.2);\n\n          data = Object.entries(data);\n          // console.log(data);\n          // console.log(temp_list);\n          // console.log(Object.entries(data));\n          g.select(\"path.path\")\n            .data([data])\n            .transition()\n            .duration(400)\n            .style(\"stroke\", \"#800026\")\n            .attr(\n              \"d\",\n              d3\n                .line()\n                .x(function (d) {\n                  // console.log(x(d[0])+30);\n                  return x(d[0]) + 30;\n                })\n                .y(function (d) {\n                  // console.log(y1(d[1]));\n                  return y1(d[1]);\n                })\n            );\n        }\n      });\n\n      dispatch.on(\"load.bar\", function () {\n        var w = 550,\n          h = 200;\n        // var theData = undefined;\n\n        var margin = { top: 10, right: 20, bottom: 30, left: 100, extra: 50 };\n        // width = w - margin.left - margin.right,\n        // height = h - margin.top - margin.bottom;\n\n        var x2 = d3.scaleBand().padding(0.1);\n        var y2 = d3.scaleLinear();\n\n        var svg2 = d3\n          .select(\"body\")\n          .select(\"div#map-right\")\n          .select(\"div#map-line\")\n          .select(\"svg\")\n          .attr(\"width\", w)\n          .attr(\"height\", h);\n\n        var g2 = svg2\n          .append(\"g\")\n          .attr(\n            \"transform\",\n            \"translate(\" + margin.extra + \",\" + margin.top + \")\"\n          );\n\n        g2.append(\"g\").attr(\"class\", \"axis axis--x\");\n\n        g2.append(\"g\").attr(\"class\", \"axis axis--y\");\n\n        var current_dataset;\n        if (selected_area == null) {\n          current_dataset = bar_overall_data;\n        } else {\n          current_dataset = bar_area_data[selected_area][0];\n        }\n\n        dispatch.on(\"statechange.bar\", function (y) {\n          if (y == \"All\") {\n            // window.addEventListener(\"resize\", drawBar);\n            drawBar(current_dataset[\"CountByMonth\"]);\n          } else {\n            var month_filtered = Object.keys(\n              current_dataset[\"CountByMonth\"]\n            ).filter(function (key) {\n              return key.includes(y);\n            });\n            var time_subset = {};\n            for (var i = 0; i < month_filtered.length; i++) {\n              time_subset[month_filtered[i]] =\n                current_dataset[\"CountByMonth\"][month_filtered[i]];\n            }\n            // window.addEventListener(\"resize\", drawBar);\n            drawBar(time_subset);\n          }\n        });\n        dispatch.on(\"areachange.bar\", function (data1) {\n          // console.log(\"areachange_bar\",data1)\n          var area;\n          if (!data1) {\n            current_dataset = bar_overall_data;\n            if (selected_year == \"All\") {\n              // window.addEventListener(\"resize\", drawBar);\n              drawBar(current_dataset[\"CountByMonth\"]);\n            } else {\n              var month_filtered = Object.keys(\n                current_dataset[\"CountByMonth\"]\n              ).filter(function (key) {\n                return key.includes(selected_year);\n              });\n              var time_subset = {};\n              for (var i = 0; i < month_filtered.length; i++) {\n                time_subset[month_filtered[i]] =\n                  current_dataset[\"CountByMonth\"][month_filtered[i]];\n              }\n              // window.addEventListener(\"resize\", drawBar);\n              drawBar(time_subset);\n            }\n          } else {\n            // this.__data__.properties.name\n            area = data1.properties.name;\n            for (i = 0; i < bar_area_data.length; i++) {\n              if (bar_area_data[i][\"Area Name\"] == area) {\n                current_dataset = bar_area_data[i];\n              }\n            }\n            // console.log(current_dataset);\n            // current_dataset = bar_area_data[area][0];\n            if (selected_year == \"All\") {\n              // window.addEventListener(\"resize\", drawBar);\n              drawBar(current_dataset[\"CountByMonth\"]);\n            } else {\n              month_filtered = Object.keys(\n                current_dataset[\"CountByMonth\"]\n              ).filter(function (key) {\n                return key.includes(selected_year);\n              });\n              time_subset = {};\n              for (i = 0; i < month_filtered.length; i++) {\n                time_subset[month_filtered[i]] =\n                  current_dataset[\"CountByMonth\"][month_filtered[i]];\n              }\n              // window.addEventListener(\"resize\", drawBar);\n              drawBar(time_subset);\n            }\n          }\n        });\n\n        function drawBar(data1) {\n          var bounds = svg2.node().getBoundingClientRect(),\n            width = bounds.width - margin.left - margin.right,\n            height1 = bounds.height - margin.top - margin.bottom;\n          // height = bounds.height - margin.top - margin.bottom;\n\n          // console.log(height1);\n          var new_data = {};\n          // console.log(data1);\n          data1 = Object.entries(data1);\n          data1.forEach(function (d) {\n            d[0] = d[0].slice(3);\n            new_data[d[0]] = d[1];\n          });\n          // console.log(data1);\n          // console.log(new_data);\n\n          data1 = new_data;\n\n          x2.rangeRound([0, width]);\n          y2.rangeRound([height1, 0]);\n\n          x2.domain(Object.keys(data1));\n          y2.domain([0, d3.max(Object.values(data1))]);\n\n          g2.select(\".axis--x\")\n            .attr(\"transform\", \"translate(0,\" + height + \")\")\n            .call(d3.axisBottom(x2));\n\n          g2.select(\".axis--y\")\n            .attr(\"transform\", \"translate(\" + width + \",0)\")\n            .call(d3.axisRight(y2).tickFormat(d3.format(\"d\")));\n\n          g2.selectAll(\"text\")\n            .style(\"stroke\", \"orange\")\n            .attr(\"stroke-width\", 0.2);\n\n          data1 = Object.entries(data1);\n          var bars = g2.selectAll(\".bar\").data(data1);\n          // .enter().append(\"g\").attr(\"class\", \"bar\");\n\n          // ENTER\n          bars\n            .enter()\n            .append(\"rect\")\n            .attr(\"class\", \"bar\")\n            .attr(\"x\", function (d) {\n              return x2(d[0]);\n            })\n            .attr(\"y\", function (d) {\n              return y2(d[1]);\n            })\n            .attr(\"width\", x2.bandwidth())\n            .attr(\"height\", function (d) {\n              return height1 - y2(d[1]);\n            });\n\n          // UPDATE\n          bars\n            .attr(\"x\", function (d) {\n              return x2(d[0]);\n            })\n            .attr(\"y\", function (d) {\n              return y2(d[1]);\n            })\n            .attr(\"width\", x2.bandwidth())\n            .attr(\"height\", function (d) {\n              return height1 - y2(d[1]);\n            });\n          // bars\n          //   .remove()\n          //   .selectAll(\".bar\")\n          //   .data(data1)\n          //   .select(\"rect\")\n          //   .transition()\n          //   .attr(\"x\", function (d) {\n          //     console.log(d[0]);\n          //     return x2(d[0]);\n          //   })\n          //   .attr(\"y\", function (d) {\n          //     // console.log(d[1]);\n          //     return y2(d[1]);\n          //   })\n          //   .attr(\"width\", x2.bandwidth())\n          //   .attr(\"height\", function (d) {\n          //     console.log(d[1]);\n          //     return height1 - y2(d[1]);\n          //   });\n\n          bars.on(\"mousemove\", function (event, d) {\n            // const[x_point, y_point] = d3.pointer(d);\n            tooltip_bar.style(\"left\", event.pageX - 810 + \"px\");\n            tooltip_bar.style(\"top\", event.pageY - 550 + \"px\");\n            tooltip_bar.style(\"display\", \"inline-block\");\n            tooltip_bar.html(\n              \"<b>Year: \" + d[0] + \"</b><br>Safety Score: \" + d[1]\n            );\n          });\n\n          bars.on(\"mouseout\", function () {\n            tooltip_bar.style(\"display\", \"none\");\n          });\n          // EXIT\n          bars.exit().remove();\n\n          // dispatch.on(\"areachange.areaname\", function (area_name) {\n          //      d3.select('body')\n          //         .select('div#map-right')\n          //         .select(\"div#map-line\")\n          //         .select(\"#area_name\")\n          //         .text(area_name);\n          // }\n\n          // var x = d3.scaleTime()\n          //     .domain(d3.extent(data, function (d) { return d['key']; }))\n          //     .rangeRound([0, width]);\n          // var y = d3.scaleLinear()\n          //     .domain(d3.extent(data, function (d) { return d['value']; }))\n          //     .rangeRound([height, 0])\n          //     .nice();\n          // var bar = d3.line()\n          //     .x(function (d) { return x(d['key']); })\n          //     .y(function (d) { return y(d['value']); });\n          // g2.select(\"g.xaxis\")\n          //     .transition()\n          //     .duration(400)\n          //     .call(d3.axisBottom(x).tickFormat(multiFormat));\n          // g2.select(\"g.yaxis\")\n          //     .transition()\n          //     .duration(400)\n          //     .call(d3.axisLeft(y).tickFormat(d3.format(\"$\")));\n          // g2.select(\"path.path\")\n          //     .datum(data)\n          //     .transition()\n          //     .duration(400)\n          //     .attr(\"d\", line2);\n        }\n      });\n\n      dispatch.on(\"statechange.title\", function (y) {\n        d3.select(\"body\")\n          .select(\"div#area\")\n          .select(\"span#current-area\")\n          .text(\n            (selected_area == null ? \"All Divisions\" : selected_area) +\n              \" - \" +\n              (y == \"All\" ? \"All Times\" : y)\n          );\n      });\n\n      dispatch.on(\"areachange.title\", function (data1) {\n        d3.selectAll(\"path\").classed(\"selected\", false);\n        if (data1) {\n          selected_area = data1.properties.name;\n        } else {\n          selected_area = null;\n        }\n\n        // title on selected area\n        d3.select(\"body\")\n          .select(\"div#map-right\")\n          .select(\"div#area_name\")\n          .text(selected_area ? selected_area : \"All Neighborhood\");\n      });\n\n      // function ready(error, geojson, areadata, overall, bar_data, bar_overall) {\n      //   if (error) throw error;\n      //   overall_data = overall;\n      //   bar_overall_data = bar_overall;\n      //   area_data = d3\n      //     .group(function (d) {\n      //       return d[\"Area Name\"];\n      //     })\n      //     .object(areadata);\n      //   // d3\n      //   // .nest()\n      //   // .key(function (d) {\n      //   //   return d[\"Area Name\"];\n      //   // })\n      //   // .object(areadata);\n      //   bar_area_data = bar_data;\n      //   console.log(bar_area_data);\n      //   var json_features = dataPrep(geojson, areadata);\n      //   // var json_features1 = dataPrep1(geojson, bar_data);\n      //   // col = [\"#67001f\",\"#b2182b\",\"#d6604d\",\"#f4a582\",\"#fddbc7\",\"#f7f7f7\",\"#d1e5f0\",\"#92c5de\",\"#4393c3\",\"#2166ac\",\"#053061\"]\n      //   var col = [\n      //     \"#ffffcc\",\n      //     \"#ffeda0\",\n      //     \"#fed976\",\n      //     \"#feb24c\",\n      //     \"#fd8d3c\",\n      //     \"#fc4e2a\",\n      //     \"#e31a1c\",\n      //     \"#bd0026\",\n      //     \"#800026\",\n      //   ];\n      //   color = d3.scaleQuantize().range(col);\n      //   // .range(d3.schemeReds[9]);\n      //   svg1\n      //     .selectAll(\"path\")\n      //     .data(json_features)\n      //     .enter()\n      //     .append(\"path\")\n      //     .attr(\"class\", \"map\")\n      //     .attr(\"d\", path)\n      //     .on(\"click\", function (d) {\n      //       dispatch.call(\"areachange\", this, d);\n      //       // dispatch.call(\"areachange\", this, d);\n      //       d3.select(this).classed(\"selected\", true);\n      //     });\n      //   // right part\n      //   // line chart\n      //   // initLine();\n\n      //   dispatch.call(\"load\", this);\n      //   dispatch.call(\"statechange\", this, selected_year);\n      // }\n\n      function dataPrep(geojson, areadata) {\n        var json_features = geojson.features;\n        var crime_count = new Map();\n        var year_area_count = [];\n        for (var i = 0; i < areadata.length; i++) {\n          var total_count = areadata[i][\"count\"];\n          var years = Object.keys(areadata[i][\"byYear\"]);\n          var area = areadata[i][\"Area Name\"];\n          for (var j = 0; j < years.length; j++) {\n            var count = areadata[i][\"byYear\"][years[j]][\"count\"];\n            year_area_count.push({\n              year: years[j],\n              \"Area Name\": area,\n              count: count,\n            });\n          }\n          year_area_count.push({\n            year: \"All\",\n            \"Area Name\": area,\n            count: total_count,\n          });\n        }\n        var nested_data = d3.group(\n          year_area_count,\n          function (d) {\n            return d[\"Area Name\"];\n          },\n          function (d) {\n            return d[\"year\"];\n          }\n        );\n        nested_data = Object.fromEntries(nested_data);\n        // .object(year_area_count);\n        // d3\n        // .nest()\n        // .key(function (d) {\n        //   return d[\"Area Name\"];\n        // })\n        // .key(function (d) {\n        //   return d[\"year\"];\n        // })\n        // .object(year_area_count);\n\n        for (i = 0; i < areadata.length; i++) {\n          crime_count.set(areadata[i][\"Area Name\"], +areadata[i].count);\n        }\n        for (i = 0; i < json_features.length; i++) {\n          var cur_id = json_features[i].properties.name;\n          if (cur_id in nested_data) {\n            nested_data[cur_id] = Object.fromEntries(nested_data[cur_id]);\n            json_features[i].properties.byYear = nested_data[cur_id];\n          } else {\n            var temp = [];\n            temp.push({\n              year: \"All\",\n              \"Area Name\": json_features[i].properties.name,\n              count: 0,\n            });\n            var temp2 = { All: temp };\n            // console.log(temp2);\n            json_features[i].properties.byYear = temp2;\n          }\n        }\n        return json_features;\n      }\n    },\n  },\n  mounted: function () {\n    // console.log(\"mounted\");\n    // console.log(\"CombinedChart packing\", d3.version);\n    this.CombinedChart();\n  },\n};\n</script>\n\n<!-- \"scoped\" attribute limits CSS to this component only -->\n<style scoped>\n>>> path.map {\n  fill-opacity: 0.7;\n  stroke: #fff;\n  stroke-width: 1px;\n}\n\n>>> path.map:hover {\n  fill-opacity: 1;\n  stroke: #000;\n  stroke-width: 1px;\n}\n>>> path.map.selected {\n  fill-opacity: 0.75;\n  fill: #000000;\n}\n\n>>> .toolTip {\n  font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n  position: absolute;\n  display: none;\n  width: auto;\n  height: auto;\n  background: none repeat scroll 0 0 white;\n  border: 0 none;\n  border-radius: 8px 8px 8px 8px;\n  box-shadow: -3px 3px 15px #888888;\n  color: black;\n  font: 12px sans-serif;\n  padding: 5px;\n  text-align: center;\n}\n>>> .line {\n  fill: none;\n  stroke: steelblue;\n  stroke-width: 4px;\n}\n\n>>> .axisSteelBlue text {\n  fill: steelblue;\n}\n\n>>> .axisRed text {\n  fill: red;\n}\n\n>>> text {\n  font-family: sans-serif;\n}\n\n>>> .area_text {\n  font-family: sans-serif;\n}\n\n>>> .bar {\n  fill: Orange;\n  opacity: 0.4;\n}\n\n>>> .bar:hover {\n  fill: pink;\n}\n\n>>> .axis--x path {\n  display: none;\n}\n\n>>> .rightAxis {\n  fill: #ffffcc;\n}\n\n>>> .leftAxis {\n  color: #800026;\n}\n\n>>> .d3-legend {\n  position: absolute;\n  fill-opacity: 0.7;\n  left: 500px;\n  top: 450px;\n}\n</style>\n"]}]}