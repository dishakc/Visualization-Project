{"remainingRequest":"/Users/dishakc/Documents/Data_Visualization/project_DV/project-the-vizards/demo/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/dishakc/Documents/Data_Visualization/project_DV/project-the-vizards/demo/src/views/CrimeChart.vue?vue&type=style&index=0&id=d4ff0c74&scoped=true&lang=css&","dependencies":[{"path":"/Users/dishakc/Documents/Data_Visualization/project_DV/project-the-vizards/demo/src/views/CrimeChart.vue","mtime":1606697993618},{"path":"/Users/dishakc/Documents/Data_Visualization/project_DV/project-the-vizards/demo/node_modules/css-loader/dist/cjs.js","mtime":1605858454676},{"path":"/Users/dishakc/Documents/Data_Visualization/project_DV/project-the-vizards/demo/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1605858459896},{"path":"/Users/dishakc/Documents/Data_Visualization/project_DV/project-the-vizards/demo/node_modules/postcss-loader/src/index.js","mtime":1605858457480},{"path":"/Users/dishakc/Documents/Data_Visualization/project_DV/project-the-vizards/demo/node_modules/cache-loader/dist/cjs.js","mtime":1605858454017},{"path":"/Users/dishakc/Documents/Data_Visualization/project_DV/project-the-vizards/demo/node_modules/vue-loader/lib/index.js","mtime":1605858459895}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCj4+PiBib2R5IHsKICB3aWR0aDogMTA2MHB4OwogIG1hcmdpbjogNTBweCBhdXRvOwp9Cj4+PiBwYXRoIHsKICBzdHJva2U6ICNmZmY7Cn0KPj4+IHBhdGg6aG92ZXIgewogIG9wYWNpdHk6IDAuMjsKfQo+Pj4gcmVjdDpob3ZlciB7CiAgZmlsbDogI2ZjYzg4NTsKfQo+Pj4gLmF4aXMgewogIGZvbnQ6IDEwcHggc2Fucy1zZXJpZjsKfQo+Pj4gLmxlZ2VuZCB0ciB7CiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIGdyZXk7Cn0KPj4+IC5sZWdlbmQgdHI6Zmlyc3QtY2hpbGQgewogIGJvcmRlci10b3A6IDFweCBzb2xpZCBncmV5Owp9Cgo+Pj4gLmF4aXMgcGF0aCwKPj4+IC5heGlzIGxpbmUgewogIGZpbGw6IG5vbmU7CiAgc3Ryb2tlOiAjMDAwOwogIHNoYXBlLXJlbmRlcmluZzogY3Jpc3BFZGdlczsKfQoKPj4+IC54LmF4aXMgcGF0aCB7CiAgZGlzcGxheTogbm9uZTsKfQo+Pj4gLmxlZ2VuZCB7CiAgbWFyZ2luLWJvdHRvbTogNzZweDsKICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CiAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsKICBib3JkZXItc3BhY2luZzogMHB4Owp9Cj4+PiAubGVnZW5kIHRkIHsKICBwYWRkaW5nOiA0cHggNXB4OwogIHZlcnRpY2FsLWFsaWduOiBib3R0b207Cn0KPj4+IC5sZWdlbmRGcmVxLAoubGVnZW5kUGVyYyB7CiAgYWxpZ246IHJpZ2h0OwogIHdpZHRoOiA1MHB4Owp9Cg=="},{"version":3,"sources":["CrimeChart.vue"],"names":[],"mappingskjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CrimeChart.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"CrimeChart\">\n    <div id=\"dashboard\"></div>\n  </div>\n</template>\n\n<script>\nimport * as d3 from \"d3\";\n\nexport default {\n  name: \"CrimeChart\",\n  data: function () {\n    return {\n      chartData: null,\n    };\n  },\n  methods: {\n    CrimeChart() {\n      function dashboard(id, fData) {\n        var barColor = \"#ffc55b\";\n        function segColor(c) {\n          return {\n            Female: \"#ffc0cb\",\n            Male: \"#c0deff\",\n            Unknown: \"#aab9c9\",\n          }[c];\n          // return { low: \"#807dba\", mid: \"#e08214\", high: \"#41ab5d\" }[c];\n        }\n\n        // compute total for each state.\n        fData.forEach(function (d) {\n          d.total = Math.ceil((d.freq.Female + d.freq.Male + d.freq.Unknown)/3);\n        });\n\n        // function to handle histogram.\n        function histoGram(fD) {\n          // console.log(fD);\n          var hG = {},\n            hGDim = { t: 60, r: 0, b: 30, l: 0 };\n          (hGDim.w = 1300 - hGDim.l - hGDim.r),\n            (hGDim.h = 500 - hGDim.t - hGDim.b);\n\n          //create svg for histogram.\n          var hGsvg = d3\n            .select(id)\n            .append(\"svg\")\n            .attr(\"width\", hGDim.w + hGDim.l + hGDim.r)\n            .attr(\"height\", hGDim.h + hGDim.t + hGDim.b)\n            .append(\"g\")\n            .attr(\"transform\", \"translate(\" + hGDim.l + \",\" + hGDim.t + \")\");\n\n          // create function for x-axis mapping.\n          var x = d3\n            .scaleBand()\n            .rangeRound([0, hGDim.w])\n            .padding(0.1)\n            .domain(\n              fD.map(function (d) {\n                return d[0];\n              })\n            );\n\n          // Add x-axis to the histogram svg.\n          hGsvg\n            .append(\"g\")\n            .attr(\"class\", \"x axis\")\n            .attr(\"transform\", \"translate(0,\" + hGDim.h + \")\")\n            .call(d3.axisBottom(x));\n\n          // Create function for y-axis map.\n          var y = d3\n            .scaleLinear()\n            .range([hGDim.h, 0])\n            .domain([\n              0,\n              d3.max(fD, function (d) {\n                return d[1];\n              }),\n            ]);\n\n          // Create bars for histogram to contain rectangles and freq labels.\n          var bars = hGsvg\n            .selectAll(\".bar\")\n            .data(fD)\n            .enter()\n            .append(\"g\")\n            .attr(\"class\", \"bar\");\n\n          //create the rectangles.\n          bars\n            .append(\"rect\")\n            .attr(\"x\", function (d) {\n              return x(d[0]);\n            })\n            .attr(\"y\", function (d) {\n              return y(d[1]);\n            })\n            .attr(\"width\", x.bandwidth())\n            .attr(\"height\", function (d) {\n              return hGDim.h - y(d[1]);\n            })\n            .attr(\"fill\", barColor)\n            .on(\"mouseover\", mouseover) // mouseover is defined below.\n            .on(\"mouseout\", mouseout); // mouseout is defined below.\n\n          //Create the frequency labels above the rectangles.\n          bars\n            .append(\"text\")\n            .text(function (d) {\n              return d3.format(\",\")(d[1]);\n            })\n            .attr(\"x\", function (d) {\n              return x(d[0]) + x.bandwidth() / 2;\n            })\n            .attr(\"y\", function (d) {\n              return y(d[1]) - 5;\n            })\n            .attr(\"text-anchor\", \"middle\");\n\n          function mouseover(event, d) {\n            // utility function to be called on mouseover.\n            // filter for selected state.\n            var st = fData.filter(function (s) {\n              return s.State == d[0];\n            })[0];\n\n            var nD = Object.keys(st.freq).map(function (s) {\n              return { type: s, freq: st.freq[s] };\n            });\n\n            // call update functions of pie-chart and legend.\n            pC.update(nD);\n            leg.update(nD);\n          }\n\n          function mouseout() {\n            // utility function to be called on mouseout.\n            // reset the pie-chart and legend.\n            pC.update(tF);\n            leg.update(tF);\n          }\n\n          // create function to update the bars. This will be used by pie-chart.\n          hG.update = function (nD, color) {\n            // update the domain of the y-axis map to reflect change in frequencies.\n            y.domain([\n              0,\n              d3.max(nD, function (d) {\n                return d[1];\n              }),\n            ]);\n\n            // Attach the new data to the bars.\n            var bars = hGsvg.selectAll(\".bar\").data(nD);\n\n            // transition the height and color of rectangles.\n            bars\n              .select(\"rect\")\n              .transition()\n              .duration(500)\n              .attr(\"y\", function (d) {\n                return y(d[1]);\n              })\n              .attr(\"height\", function (d) {\n                return hGDim.h - y(d[1]);\n              })\n              .attr(\"fill\", color);\n\n            // transition the frequency labels location and change value.\n            bars\n              .select(\"text\")\n              .transition()\n              .duration(500)\n              .text(function (d) {\n                return d3.format(\",\")(d[1]);\n              })\n              .attr(\"y\", function (d) {\n                return y(d[1]) - 5;\n              });\n          };\n          return hG;\n        }\n\n        // function to handle pieChart.\n        function pieChart(pD) {\n          var pC = {},\n            pieDim = { w: 250, h: 250 };\n          pieDim.r = Math.min(pieDim.w, pieDim.h) / 2;\n\n          // create svg for pie chart.\n          var piesvg = d3\n            .select(id)\n            .append(\"svg\")\n            .attr(\"width\", pieDim.w)\n            .attr(\"height\", pieDim.h)\n            .append(\"g\")\n            .attr(\n              \"transform\",\n              \"translate(\" + pieDim.w / 2 + \",\" + pieDim.h / 2 + \")\"\n            );\n\n          // create function to draw the arcs of the pie slices.\n          var arc = d3\n            .arc()\n            .outerRadius(pieDim.r - 10)\n            .innerRadius(0);\n\n          // create a function to compute the pie slice angles.\n          var pie = d3\n            .pie()\n            .sort(null)\n            .value(function (d) {\n              return d.freq;\n            });\n\n          // Draw the pie slices.\n          piesvg\n            .selectAll(\"path\")\n            .data(pie(pD))\n            .enter()\n            .append(\"path\")\n            .attr(\"d\", arc)\n            .each(function (d) {\n              this._current = d;\n            })\n            .style(\"fill\", function (d) {\n              return segColor(d.data.type);\n            })\n            .on(\"mouseover\", mouseover)\n            .on(\"mouseout\", mouseout);\n\n          // create function to update pie-chart. This will be used by histogram.\n          pC.update = function (nD) {\n            piesvg\n              .selectAll(\"path\")\n              .data(pie(nD))\n              .transition()\n              .duration(500)\n              .attrTween(\"d\", arcTween);\n          };\n          // Utility function to be called on mouseover a pie slice.\n          function mouseover(event, d) {\n            // call the update function of histogram with new data.\n            hG.update(\n              fData.map(function (v) {\n                // console.log(v);\n                return [v.State, v.freq[d.data.type]];\n              }),\n              segColor(d.data.type)\n            );\n          }\n          //Utility function to be called on mouseout a pie slice.\n          function mouseout() {\n            // call the update function of histogram with all data.\n            hG.update(\n              fData.map(function (v) {\n                return [v.State, v.total];\n              }),\n              barColor\n            );\n          }\n          // Animating the pie-slice requiring a custom function which specifies\n          // how the intermediate paths should be drawn.\n          function arcTween(a) {\n            var i = d3.interpolate(this._current, a);\n            this._current = i(0);\n            return function (t) {\n              return arc(i(t));\n            };\n          }\n          return pC;\n        }\n\n        // function to handle legend.\n        function legend(lD) {\n          var leg = {};\n\n          // create table for legend.\n          var legend = d3.select(id).append(\"table\").attr(\"class\", \"legend\");\n\n          // create one row per segment.\n          var tr = legend\n            .append(\"tbody\")\n            .selectAll(\"tr\")\n            .data(lD)\n            .enter()\n            .append(\"tr\");\n\n          // create the first column for each segment.\n          tr.append(\"td\")\n            .append(\"svg\")\n            .attr(\"width\", \"16\")\n            .attr(\"height\", \"16\")\n            .append(\"rect\")\n            .attr(\"width\", \"16\")\n            .attr(\"height\", \"16\")\n            .attr(\"fill\", function (d) {\n              return segColor(d.type);\n            });\n\n          // create the second column for each segment.\n          tr.append(\"td\").text(function (d) {\n            return d.type;\n          });\n\n          // create the third column for each segment.\n          tr.append(\"td\")\n            .attr(\"class\", \"legendFreq\")\n            .text(function (d) {\n              return d3.format(\",\")(d.freq);\n            });\n\n          // create the fourth column for each segment.\n          tr.append(\"td\")\n            .attr(\"class\", \"legendPerc\")\n            .text(function (d) {\n              return getLegend(d, lD);\n            });\n\n          // Utility function to be used to update the legend.\n          leg.update = function (nD) {\n            // update the data attached to the row elements.\n            var l = legend.select(\"tbody\").selectAll(\"tr\").data(nD);\n\n            // update the frequencies.\n            l.select(\".legendFreq\").text(function (d) {\n              return d3.format(\",\")(d.freq);\n            });\n\n            // update the percentage column.\n            l.select(\".legendPerc\").text(function (d) {\n              return getLegend(d, nD);\n            });\n          };\n\n          function getLegend(d, aD) {\n            // Utility function to compute percentage.\n            return d3.format(\".0%\")(\n              d.freq /\n                d3.sum(\n                  aD.map(function (v) {\n                    return v.freq;\n                  })\n                )\n            );\n          }\n\n          return leg;\n        }\n        // calculate total frequency by segment for all state.\n        // var tF = [\"low\", \"mid\", \"high\"]\n        var tF = [\"Female\", \"Male\", \"Unknown\"].map(function (d) {\n          return {\n            type: d,\n            freq: d3.sum(\n              fData.map(function (t) {\n                return t.freq[d];\n              })\n            ),\n          };\n        });\n        // calculate total frequency by state for all segment.\n        var sF = fData.map(function (d) {\n          return [d.State, d.total];\n        });\n\n        var hG = histoGram(sF), // create the histogram.\n          pC = pieChart(tF), // create the pie-chart.\n          leg = legend(tF); // create the legend.\n      }\n      // var freqData = [\n      //   { State: \"AM\", freq: { low: 10.9, mid: 11.3, high: 8.1 } },\n      //   { State: \"BA\", freq: { low: 11.4, mid: 12.2, high: 11.8 } },\n      //   { State: \"CE\", freq: { low: 8.6, mid: 7.7, high: 7.1 } },\n      //   { State: \"DF\", freq: { low: 20.9, mid: 13, high: 16.1 } },\n      //   { State: \"ES\", freq: { low: 10.3, mid: 10.9, high: 14.5 } },\n      //   { State: \"GO\", freq: { low: 10.5, mid: 11.4, high: 13.3 } },\n      // ];\n      var freqData = [\n        {\n          State: \"77th Street\",\n          freq: {\n            Female: 34,\n            Male: 35,\n            Unknown: 2,\n          },\n        },\n        {\n          State: \"Central\",\n          freq: {\n            Female: 35,\n            Male: 36,\n            Unknown: 0,\n          },\n        },\n        {\n          State: \"Devonshire\",\n          freq: {\n            Female: 39,\n            Male: 36,\n            Unknown: 0,\n          },\n        },\n        {\n          State: \"Foothill\",\n          freq: {\n            Female: 35,\n            Male: 33,\n            Unknown: 0,\n          },\n        },\n        {\n          State: \"Harbor\",\n          freq: {\n            Female: 37,\n            Male: 33,\n            Unknown: 0,\n          },\n        },\n        {\n          State: \"Hollenbeck\",\n          freq: {\n            Female: 34,\n            Male: 29,\n            Unknown: 0,\n          },\n        },\n        {\n          State: \"Hollywood\",\n          freq: {\n            Female: 33,\n            Male: 30,\n            Unknown: 0,\n          },\n        },\n        {\n          State: \"Mission\",\n          freq: {\n            Female: 34,\n            Male: 30,\n            Unknown: 0,\n          },\n        },\n        {\n          State: \"N Hollywood\",\n          freq: {\n            Female: 37,\n            Male: 32,\n            Unknown: 0,\n          },\n        },\n        {\n          State: \"Newton\",\n          freq: {\n            Female: 31,\n            Male: 29,\n            Unknown: 0,\n          },\n        },\n        {\n          State: \"Northeast\",\n          freq: {\n            Female: 37,\n            Male: 33,\n            Unknown: 0,\n          },\n        },\n        {\n          State: \"Olympic\",\n          freq: {\n            Female: 33,\n            Male: 31,\n            Unknown: 31,\n          },\n        },\n        {\n          State: \"Pacific\",\n          freq: {\n            Female: 0,\n            Male: 35,\n            Unknown: 1,\n          },\n        },\n        {\n          State: \"Rampart\",\n          freq: {\n            Female: 33,\n            Male: 33,\n            Unknown: 4,\n          },\n        },\n        {\n          State: \"Southeast\",\n          freq: {\n            Female: 0,\n            Male: 35,\n            Unknown: 2,\n          },\n        },\n        {\n          State: \"Southwest\",\n          freq: {\n            Female: 35,\n            Male: 34,\n            Unknown: 34,\n          },\n        },\n        {\n          State: \"Topanga\",\n          freq: {\n            Female: 39,\n            Male: 36,\n            Unknown: 0,\n          },\n        },\n        {\n          State: \"Van Nuys\",\n          freq: {\n            Female: 0,\n            Male: 34,\n            Unknown: 0,\n          },\n        },\n        {\n          State: \"West LA\",\n          freq: {\n            Female: 41,\n            Male: 39,\n            Unknown: 9,\n          },\n        },\n        {\n          State: \"West Valley\",\n          freq: {\n            Female: 39,\n            Male: 32,\n            Unknown: 1,\n          },\n        },\n        {\n          State: \"Wilshire\",\n          freq: {\n            Female: 37,\n            Male: 37,\n            Unknown: 0,\n          },\n        },\n      ];\n\n      dashboard(\"#dashboard\", freqData);\n    },\n  },\n  mounted: function () {\n    // console.log(\"mounted\");\n    // console.log(\"crime chart\", d3.version);\n    this.CrimeChart();\n  },\n};\n</script>\n\n<!-- \"scoped\" attribute limits CSS to this component only -->\n<style scoped>\n>>> body {\n  width: 1060px;\n  margin: 50px auto;\n}\n>>> path {\n  stroke: #fff;\n}\n>>> path:hover {\n  opacity: 0.2;\n}\n>>> rect:hover {\n  fill: #fcc885;\n}\n>>> .axis {\n  font: 10px sans-serif;\n}\n>>> .legend tr {\n  border-bottom: 1px solid grey;\n}\n>>> .legend tr:first-child {\n  border-top: 1px solid grey;\n}\n\n>>> .axis path,\n>>> .axis line {\n  fill: none;\n  stroke: #000;\n  shape-rendering: crispEdges;\n}\n\n>>> .x.axis path {\n  display: none;\n}\n>>> .legend {\n  margin-bottom: 76px;\n  display: inline-block;\n  border-collapse: collapse;\n  border-spacing: 0px;\n}\n>>> .legend td {\n  padding: 4px 5px;\n  vertical-align: bottom;\n}\n>>> .legendFreq,\n.legendPerc {\n  align: right;\n  width: 50px;\n}\n</style>\n"]}]}