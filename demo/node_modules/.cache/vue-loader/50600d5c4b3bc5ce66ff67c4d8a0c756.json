{"remainingRequest":"/Users/posha/Documents/GitHub/DSCI554/project-the-vizards/demo/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/posha/Documents/GitHub/DSCI554/project-the-vizards/demo/src/views/CombinedChart.vue?vue&type=template&id=4ee30b8f&scoped=true&","dependencies":[{"path":"/Users/posha/Documents/GitHub/DSCI554/project-the-vizards/demo/src/views/CombinedChart.vue","mtime":1606717047710},{"path":"/Users/posha/Documents/GitHub/DSCI554/project-the-vizards/demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/posha/Documents/GitHub/DSCI554/project-the-vizards/demo/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/posha/Documents/GitHub/DSCI554/project-the-vizards/demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/posha/Documents/GitHub/DSCI554/project-the-vizards/demo/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CjxkaXYgY2xhc3M9IkNvbWJpbmVkQ2hhcnQiPgogIDxsaW5rIGhyZWY9ImNzcy9ib290c3RyYXAvYm9vdHN0cmFwLm1pbi5jc3MiIHJlbD0ic3R5bGVzaGVldCIgLz4KICA8ZGl2IGlkPSJhcmVhIiBjbGFzcz0ianVtYm90cm9uIj4KICAgIDxoND5Db3JyZWxhdGlvbiBiZXR3ZWVuIFNhZmV0eSBTY29yZSBWcyBSZW50IHByaWNlIGluIExvcyBBbmdlbGVzPC9oND4KICAgIDxiciAvPgogICAgPHA+CiAgICAgIFRvIHVuZGVyc3RhbmQgdGhlIHJlbGF0aW9uc2hpcCBiZXR3ZWVuIHRoZSByZW50IGFuZCBjcmltZSBtb3JlCiAgICAgIGNvaGVzaXZlbHksIHdlIGRlY2lkZWQgdG8gaW50cm9kdWNlIGEgbmV3IGF0dHJpYnV0ZSwgY2FsbGVkLCDigJxTYWZldHkKICAgICAgU2NvcmXigJ0uIFRoaXMgd2FzIGNhbGN1bGF0ZWQgdG8gY29uc2lkZXIgdGhhdCBkaWZmZXJlbnQgY3JpbWUgdHlwZXMgaGF2ZQogICAgICBkaWZmZXJlbnQgc2V2ZXJpdHkgbGV2ZWxzIGFuZCBoZW5jZSwgc2hvdWxkIGJlIGdpdmVuIGhpZ2hlciB3ZWlnaHRhZ2UKICAgICAgZXZlbiBpZiB0aGVpciBmcmVxdWVuY3kgaXMgbG93LiBUaGVyZWZvcmUsIHdlIGNhbGN1bGF0ZWQgdGhlIGNyaW1lIHNjb3JlCiAgICAgIGZpcnN0IGJ5IGFsaWduaW5nIGVhY2ggY3JpbWUgdHlwZSB0byBpdOKAmXMgc2V2ZXJpdHkuIEFmdGVyIGNhbGN1bGF0aW5nCiAgICAgIHRoZSBjcmltZSBzY29yZSwgdGhlIHNhZmV0eSBzY29yZSB3ZXJlIGNhbGN1bGF0ZWQgdXNpbmcgdGhlIGNyaW1lIHNjb3JlLgogICAgPC9wPgoKICAgIDxoNT5TYWZldHkgU2NvcmUgQ2FsY3VsYXRpb248L2g1PgogICAgPHA+CiAgICAgIFRoZSBjcmltZSBkYXRhc2V0IGNvbnNpc3RzIG9mIGEgbGlzdCBvZiBjcmltZXMgd2l0aCB2YXJ5aW5nIHNldmVyaXR5LgogICAgICBJbnR1aXRpdmVseSwgaXQgY2FuIGJlIHVuZGVyc3Rvb2QgdGhhdCB0aGUgbW9yZSBzZXJpb3VzIHRoZSBjcmltZSB0aGUKICAgICAgaGlnaGVyIGl0IGltcGFjdHMgdGhlIHBlcmNlcHRpb24gb2Ygc2VjdXJpdHkgaW4gYSBsb2NhdGlvbi4gQmFzZWQgb24KICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9kb2kub3JnLzEwLjEwOTMvcG9saWNlL3BheDA0OSIgdGFyZ2V0PSJfYmxhbmsiCiAgICAgICAgPkNvbXBhcmluZyBNZXRob2RzIGZvciBNZWFzdXJpbmcgQ3JpbWUgSGFybS9TZXZlcml0eTwvYQogICAgICA+LCB3ZWlnaHRzIGFyZSBhc3NpZ25lZCB0byBldmVyeSBjcmltZSBhbmQgYW4gb3ZlcmFsbCB2YWx1ZSBpcwogICAgICBjYWxjdWxhdGVkIGZvciBlYWNoIGxvY2F0aW9uLiBFYWNoIGNyaW1lIGluIHRoZSBjcmltZSBkYXRhc2V0IHdhcwogICAgICBjb21wYXJlZCB3aXRoIHRoZSBsaXN0IG9mIE5vdGlmaWFibGUgT2ZmZW5jZSBMaXN0IENhdGVnb3JpZXMgYW5kIGdpdmVuCiAgICAgIHRoZSBDcmltZSBTZXZlcml0eSBTY29yZS4gVGhlIENyaW1lIFNldmVyaXR5IFNjb3JlIChDU1MpIGlzIHRoZSBzY29yZQogICAgICBhc3NpZ25lZCB0byBhIGNyaW1lIGJhc2VkIG9uIHRoZSBtZWFuIHNlbnRlbmNlIHBhc3NlZCBvbiB0aG9zZSB3aG8gd2VyZQogICAgICBjb252aWN0ZWQgb2YgdGhlIG9mZmVuc2UuIEVhY2ggc2NvcmUgaXMgbm9ybWFsaXplZCBhbmQgdGhlIGZpbmFsIGNyaW1lCiAgICAgIHZhbHVlcyBmb3IgZWFjaCBsb2NhdGlvbiBpcyBjYWxjdWxhdGVkIHVzaW5nIHRoZSBkb3QgcHJvZHVjdCBvZiB0aGUKICAgICAgY3JpbWUgd2VpZ2h0IGFuZCB0aGUgY3JpbWUgZnJlcXVlbmN5IG1hdHJpY2VzLiBVc2luZyB0aGVzZSBjcmltZSBzY29yZXMsCiAgICAgIHRoZSBzYWZldHkgc2NvcmVzIGFyZSBjYWxjdWxhdGVkIGJ5IHRha2luZyB0aGVpciBuZWdhdGl2ZXMuCiAgICA8L3A+CgogICAgPGg1PkZpbmFsIGNoYXJ0PC9oNT4KICAgIDxwPgogICAgICBJbiB0aGUgY2xvcm9wbGV0aCBtYXAgb24gdGhpcyBwYWdlLCB0aGUgY29sb3JzIGluZGljYXRlIHRoZSBhdmVyYWdlIHJlbnQKICAgICAgcHJpY2UgZm9yIGVhY2ggbmVpZ2hib3Job29kLiBXaGVuIGhvdmVyZWQgb3ZlciBhIG5laWdoYm9yaG9vZCwgdGhlCiAgICAgIGF2ZXJhZ2UgcmVudCBvdmVyIHRoZSB5ZWFycyBpbiB0aGF0IG5laWdoYm9yaG9vZCBpcyBzaG93biBpbiB0aGUKICAgICAgdG9vbHRpcC4gVGhyb3VnaCB0aGUgaW50ZXJhY3RpdmUgZmVhdHVyZSwgd2hpY2ggYWxsb3dzIHVzZXJzIHRvIHNlbGVjdCBhCiAgICAgIHNwZWNpZmljIG5laWdoYm9yaG9vZCBvbiB0aGUgbWFwLCBvbmUgY2FuIGRpdmUgZGVlcGVyIGludG8gdGhlIHRyZW5kcyBvZgogICAgICBib3RoIHNhZmV0eSBzY29yZSBhbmQgYXZlcmFnZSByZW50IG92ZXIgdGhlIHllYXJzIGZvciB0aGF0IHNwZWNpZmljCiAgICAgIG5laWdoYm9yaG9vZC4gSW4gZ2VuZXJhbCwgdGhlIHVzZXIgY2FuIG9ic2VydmUgdGhhdCBhcyB0aGUgc2FmZXR5IHNjb3JlCiAgICAgIGluY3JlYXNlcywgdGhlIHJlbnQgcHJpY2UgaW5jcmVhc2VzLgogICAgPC9wPgogICAgPGRpdiBjbGFzcz0iY29udGFpbmVyIj4KICAgICAgPGRpdiBjbGFzcz0icm93Ij4KICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtbWQtNiI+CiAgICAgICAgICA8ZGl2IGlkPSJzZWxlY3QteWVhciIgc3R5bGU9InRleHQtYWxpZ246IGNlbnRlciI+PC9kaXY+CiAgICAgICAgICA8ZGl2IGlkPSJtYXAtbGVmdCI+CiAgICAgICAgICAgIDwhLS0gPHN2ZyBpZCA9ICJzdmdfY2hhcnQiPjwvc3ZnPiAtLT4KICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgaWQ9Im1hcC1yaWdodCIgY2xhc3M9ImNvbC1tZC02Ij4KICAgICAgICAgIDxoNCBzdHlsZT0idGV4dC1hbGlnbjogY2VudGVyIj4KICAgICAgICAgICAgU2FmZXR5IFNjb3JlIFZzIFJlbnQgcHJpY2UgaW4gTEEgYnkgeWVhcgogICAgICAgICAgPC9oND4KICAgICAgICAgIDxoNj4qIExpbmUgQ2hhcnQgUmVwcmVzZW50cyBSZW50IFByaWNlPC9oNj4KICAgICAgICAgIDxoNj4qIEJhciBDaGFydCBSZXByZXNlbnRzIFNhZmV0eSBTY29yZTwvaDY+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJyb3ciIGlkPSJtYXAtbGluZTIiPjwvZGl2PgogICAgICAgICAgPGRpdiBjbGFzcz0icm93IiBpZD0ibWFwLWxpbmUiPjwvZGl2PgogICAgICAgICAgPGRpdiBpZD0iYXJlYV9uYW1lIj48L2Rpdj4KICAgICAgICAgIDwhLS0gPHN2ZyBjbGFzcz0icm93IiBpZD0iYmFyX2NoYXJ0IiB3aWR0aD0iMTAwJSIgaGVpZ2h0PSI1MDBweCI+PC9zdmc+IC0tPgogICAgICAgIDwvZGl2PgogICAgICA8L2Rpdj4KICAgIDwvZGl2PgogIDwvZGl2Pgo8L2Rpdj4K"},null]}