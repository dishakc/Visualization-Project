{"remainingRequest":"/Users/posha/Documents/GitHub/DSCI554/project-the-vizards/demo/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/posha/Documents/GitHub/DSCI554/project-the-vizards/demo/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/posha/Documents/GitHub/DSCI554/project-the-vizards/demo/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/posha/Documents/GitHub/DSCI554/project-the-vizards/demo/src/views/MapBox.vue?vue&type=template&id=28892609&scoped=true&","dependencies":[{"path":"/Users/posha/Documents/GitHub/DSCI554/project-the-vizards/demo/src/views/MapBox.vue","mtime":1606699334157},{"path":"/Users/posha/Documents/GitHub/DSCI554/project-the-vizards/demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/posha/Documents/GitHub/DSCI554/project-the-vizards/demo/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/posha/Documents/GitHub/DSCI554/project-the-vizards/demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/posha/Documents/GitHub/DSCI554/project-the-vizards/demo/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiTWFwQm94IiB9LCBbCiAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImp1bWJvdHJvbiIgfSwgWwogICAgICBfdm0uX20oMCksCiAgICAgIF9jKCJiciIpLAogICAgICBfYygiaDQiLCBbX3ZtLl92KCJDcmltZSBGcmVxdWVuY3kgYnkgQWdlIGFuZCBHZW5kZXIiKV0pLAogICAgICBfYygicCIsIFsKICAgICAgICBfdm0uX3YoCiAgICAgICAgICAiIFRoZSBmaXJzdCBjaGFydCBpbmRpY2F0ZXMgdGhlIGZyZXF1ZW5jeSBvZiBjcmltZSB0YWtpbmcgcGxhY2UgYnkgYWdlIGFuZCBnZW5kZXIuIFRocm91Z2ggdGhpcyB3ZSBjYW4gdW5kZXJzdGFuZCB3aGljaCBnZW5kZXIgaXMgaGl0IHdvcnNlIGluIGV2ZXJ5IGFnZSBncm91cC4gIgogICAgICAgICkKICAgICAgXSksCiAgICAgIF9jKCJwIiwgWwogICAgICAgIF92bS5fdigKICAgICAgICAgICIgKiBIb3ZlciBvdmVyIHRoZSBwaWUgY2hhcnQgZm9yIHNwZWNpZmljIGdlbmRlciBkaXN0cmlidXRpb24gaW5mb3JtYXRpb24gIgogICAgICAgICkKICAgICAgXSksCiAgICAgIF9jKCJwIiwgWwogICAgICAgIF92bS5fdigKICAgICAgICAgICIqIEhvdmVyIG92ZXIgdGhlIGJhcnMgZm9yIHNwZWNpZmljIGFnZSBkaXN0cmlidXRpb24gaW5mb3JtYXRpb24iCiAgICAgICAgKQogICAgICBdKSwKICAgICAgX2MoImRpdiIsIHsgYXR0cnM6IHsgaWQ6ICJkYXNoYm9hcmQiIH0gfSksCiAgICAgIF9jKCJiciIpLAogICAgICBfYygiYnIiKSwKICAgICAgX2MoImg0IiwgW192bS5fdigiQ3JpbWUgYnkgTmVpZ2hib3Job29kIGFuZCBWaWN0aW0ncyBSYWNlIildKSwKICAgICAgX2MoInAiLCBbCiAgICAgICAgX3ZtLl92KAogICAgICAgICAgIiBUaGlzIHpvb21hYmxlIGNpcmNsZSBwYWNraW5nIHNob3dzIHRoZSBjcmltZSBieSBuZWlnaGJvcmhvb2QgYW5kIHZpY3RpbeKAmXMgcmFjZS4gVGhyb3VnaCB0aGlzIHdlIGNhbiBkZXRlcm1pbmUgdGhlIHJhY2UgdGhhdCBpcyBhZmZlY3RlZCBtb3N0IGluIGV2ZXJ5IG5laWdoYm9yaG9vZC4gIgogICAgICAgICkKICAgICAgXSksCiAgICAgIF9jKCJwIiwgWwogICAgICAgIF92bS5fdigiKiBDbGljayBvbiBhbnkgTmVpZ2hib3Job29kIGZvciBhbmFseXNpcyBieSBWaWN0aW0ncyBSYWNlIikKICAgICAgXSksCiAgICAgIF9jKAogICAgICAgICJkaXYiLAogICAgICAgIFsKICAgICAgICAgIF9jKCJjZW50ZXIiLCBbCiAgICAgICAgICAgIF9jKCJzdmciLCB7IGF0dHJzOiB7IHdpZHRoOiAiNDAwIiwgaGVpZ2h0OiAiMzAwIiwgaWQ6ICJjaGFydCIgfSB9KQogICAgICAgICAgXSkKICAgICAgICBdLAogICAgICAgIDEKICAgICAgKSwKICAgICAgX2MoImJyIiksCiAgICAgIF9jKCJiciIpLAogICAgICBfYygiaDQiLCBbX3ZtLl92KCJIZWF0IE1hcCBJbmRpY2F0aW5nIENyaW1lIEZyZXF1ZW5jeSBmb3IgTEEgQ291bnR5IildKSwKICAgICAgX2MoInAiLCBbCiAgICAgICAgX3ZtLl92KAogICAgICAgICAgIiBUaGlzIGNoYXJ0IHNob3dzIHRoZSBpbnRlbnNpdHkgb2YgY3JpbWUgdGFraW5nIHBsYWNlIGluIGFsbCB0aGUgbmVpZ2hib3Job29kcyBvZiBMQS4gVGhpcyBnaXZlcyB1cyBhbiBvdmVydmlldyBvZiBzYWZlIGFuZCB1bnNhZmUgbmVpZ2hib3Job29kcyByZWxhdGl2ZSB0byBlYWNoIG90aGVyLiAiCiAgICAgICAgKQogICAgICBdKSwKICAgICAgX2MoInAiLCBbX3ZtLl92KCIqIEZvciBzcGVjaWZpYyBpbmZvcm1hdGlvbiwgem9vbSBvdmVyIHRoZSBtYXAiKV0pLAogICAgICBfYygibWV0YSIsIHsKICAgICAgICBhdHRyczogewogICAgICAgICAgbmFtZTogInZpZXdwb3J0IiwKICAgICAgICAgIGNvbnRlbnQ6ICJpbml0aWFsLXNjYWxlPTEsbWF4aW11bS1zY2FsZT0xLHVzZXItc2NhbGFibGU9bm8iCiAgICAgICAgfQogICAgICB9KSwKICAgICAgX2MoImJyIiksCiAgICAgIF92bS5fbSgxKSwKICAgICAgX2MoImJyIikKICAgIF0pCiAgXSkKfQp2YXIgc3RhdGljUmVuZGVyRm5zID0gWwogIGZ1bmN0aW9uKCkgewogICAgdmFyIF92bSA9IHRoaXMKICAgIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogICAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgICByZXR1cm4gX2MoInAiLCB7IHN0YXRpY1N0eWxlOiB7ICJmb250LXNpemUiOiAiMTEwJSIgfSB9LCBbCiAgICAgIF9jKCJiIiwgWwogICAgICAgIF92bS5fdigKICAgICAgICAgICIgT24gdGhpcyBwYWdlLCB3ZSBoYXZlIGZvY3VzZWQgb24gYW5hbHl6aW5nIHRoZSBjcmltZSBkYXRhLiBGcm9tIHRoZSBjcmltZSBkYXRhLCB3ZSBhaW0gdG8gdW5kZXJzdGFuZCB0aGUgcmVsYXRpb25zaGlwIGJldHdlZW4gdGhlIGRpZmZlcmVudCBhdHRyaWJ1dGVzIHN1Y2ggYXMgbmVpZ2hib3Job29kcywgdmljdGltIGRlbW9ncmFwaGljIGFuZCB0aGUgY3JpbWUgZnJlcXVlbmN5LiBPbiB0aGlzIHBhZ2UsIHRoZSB1c2VycyBjYW4gaW50ZXJhY3Qgd2l0aCB0aGUgdmlzdWFsaXphdGlvbnMgdG8gYmV0dGVyIGluZmVyIHRoZSBwYXR0ZXJucyBiZXR3ZWVuIGNyaW1lIGZyZXF1ZW5jeSBhbmQgdmljdGltIGRlbW9ncmFwaGljIGluIGRpZmZlcmVudCBuZWlnaGJvcmhvb2RzIGluIExvcyBBbmdlbGVzLiAiCiAgICAgICAgKQogICAgICBdKQogICAgXSkKICB9LAogIGZ1bmN0aW9uKCkgewogICAgdmFyIF92bSA9IHRoaXMKICAgIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogICAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgICByZXR1cm4gX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJtYXBib3hfY29udGFpbmVyIiB9LCBbCiAgICAgIF9jKCJkaXYiLCB7IGF0dHJzOiB7IGlkOiAibWFwIiB9IH0pCiAgICBdKQogIH0KXQpyZW5kZXIuX3dpdGhTdHJpcHBlZCA9IHRydWUKCmV4cG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0="}]}